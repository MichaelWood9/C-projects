

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Apr 30 19:10:13 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F882
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.40
    44                           ; Generated 17/11/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F882 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	idataBANK0
   460  07FC                     __pidataBANK0:
   461                           
   462                           ;initializer for _low
   463  07FC  34C8               	retlw	200
   464  07FD  3400               	retlw	0
   465                           
   466                           ;initializer for _temparraysize
   467  07FE  3479               	retlw	121
   468                           
   469                           ;initializer for _updateScreen
   470  07FF  3401               	retlw	1
   471                           
   472                           	psect	stringtext
   473  0100                     __pstringtext:
   474  0100                     stringtab:
   475  0100                     __stringtab:
   476                           
   477                           ;	String table - string pointers are 2 bytes each
   478  0100  1BFF               	btfsc	btemp+1,7
   479  0101  290A               	ljmp	stringcode
   480  0102  1383               	bcf	3,7
   481  0103  187F               	btfsc	btemp+1,0
   482  0104  1783               	bsf	3,7
   483  0105  0800               	movf	0,w
   484  0106  0A84               	incf	4,f
   485  0107  1903               	skipnz
   486  0108  0AFF               	incf	btemp+1,f
   487  0109  0008               	return
   488  010A                     stringcode:
   489  010A  087F               	movf	btemp+1,w
   490  010B  397F               	andlw	127
   491  010C  008A               	movwf	10
   492  010D  0804               	movf	4,w
   493  010E  0A84               	incf	4,f
   494  010F  1903               	skipnz
   495  0110  0AFF               	incf	btemp+1,f
   496  0111  0082               	movwf	2
   497  0112                     __stringbase:
   498  0112                     __end_of__stringtab:
   499  0112                     _ThermValueLUT:
   500  0112  3465               	retlw	101
   501  0113  3403               	retlw	3
   502  0114  345C               	retlw	92
   503  0115  3403               	retlw	3
   504  0116  3454               	retlw	84
   505  0117  3403               	retlw	3
   506  0118  344C               	retlw	76
   507  0119  3403               	retlw	3
   508  011A  3445               	retlw	69
   509  011B  3403               	retlw	3
   510  011C  343D               	retlw	61
   511  011D  3403               	retlw	3
   512  011E  3435               	retlw	53
   513  011F  3403               	retlw	3
   514  0120  342D               	retlw	45
   515  0121  3403               	retlw	3
   516  0122  3424               	retlw	36
   517  0123  3403               	retlw	3
   518  0124  341B               	retlw	27
   519  0125  3403               	retlw	3
   520  0126  3417               	retlw	23
   521  0127  3403               	retlw	3
   522  0128  340E               	retlw	14
   523  0129  3403               	retlw	3
   524  012A  3404               	retlw	4
   525  012B  3403               	retlw	3
   526  012C  34FB               	retlw	251
   527  012D  3402               	retlw	2
   528  012E  34F1               	retlw	241
   529  012F  3402               	retlw	2
   530  0130  34E7               	retlw	231
   531  0131  3402               	retlw	2
   532  0132  34DC               	retlw	220
   533  0133  3402               	retlw	2
   534  0134  34D2               	retlw	210
   535  0135  3402               	retlw	2
   536  0136  34C7               	retlw	199
   537  0137  3402               	retlw	2
   538  0138  34BC               	retlw	188
   539  0139  3402               	retlw	2
   540  013A  34AF               	retlw	175
   541  013B  3402               	retlw	2
   542  013C  34A2               	retlw	162
   543  013D  3402               	retlw	2
   544  013E  3498               	retlw	152
   545  013F  3402               	retlw	2
   546  0140  348E               	retlw	142
   547  0141  3402               	retlw	2
   548  0142  3484               	retlw	132
   549  0143  3402               	retlw	2
   550  0144  3479               	retlw	121
   551  0145  3402               	retlw	2
   552  0146  346E               	retlw	110
   553  0147  3402               	retlw	2
   554  0148  3464               	retlw	100
   555  0149  3402               	retlw	2
   556  014A  3459               	retlw	89
   557  014B  3402               	retlw	2
   558  014C  344E               	retlw	78
   559  014D  3402               	retlw	2
   560  014E  3443               	retlw	67
   561  014F  3402               	retlw	2
   562  0150  343D               	retlw	61
   563  0151  3402               	retlw	2
   564  0152  3432               	retlw	50
   565  0153  3402               	retlw	2
   566  0154  3427               	retlw	39
   567  0155  3402               	retlw	2
   568  0156  341C               	retlw	28
   569  0157  3402               	retlw	2
   570  0158  3411               	retlw	17
   571  0159  3402               	retlw	2
   572  015A  3405               	retlw	5
   573  015B  3402               	retlw	2
   574  015C  34FA               	retlw	250
   575  015D  3401               	retlw	1
   576  015E  34EF               	retlw	239
   577  015F  3401               	retlw	1
   578  0160  34E4               	retlw	228
   579  0161  3401               	retlw	1
   580  0162  34D9               	retlw	217
   581  0163  3401               	retlw	1
   582  0164  34CE               	retlw	206
   583  0165  3401               	retlw	1
   584  0166  34C2               	retlw	194
   585  0167  3401               	retlw	1
   586  0168  34B7               	retlw	183
   587  0169  3401               	retlw	1
   588  016A  34AC               	retlw	172
   589  016B  3401               	retlw	1
   590  016C  34A2               	retlw	162
   591  016D  3401               	retlw	1
   592  016E  3497               	retlw	151
   593  016F  3401               	retlw	1
   594  0170  348C               	retlw	140
   595  0171  3401               	retlw	1
   596  0172  3481               	retlw	129
   597  0173  3401               	retlw	1
   598  0174  3474               	retlw	116
   599  0175  3401               	retlw	1
   600  0176  3474               	retlw	116
   601  0177  3401               	retlw	1
   602  0178  3468               	retlw	104
   603  0179  3401               	retlw	1
   604  017A  3460               	retlw	96
   605  017B  3401               	retlw	1
   606  017C  3457               	retlw	87
   607  017D  3401               	retlw	1
   608  017E  344E               	retlw	78
   609  017F  3401               	retlw	1
   610  0180  3446               	retlw	70
   611  0181  3401               	retlw	1
   612  0182  343D               	retlw	61
   613  0183  3401               	retlw	1
   614  0184  3435               	retlw	53
   615  0185  3401               	retlw	1
   616  0186  342D               	retlw	45
   617  0187  3401               	retlw	1
   618  0188  3425               	retlw	37
   619  0189  3401               	retlw	1
   620  018A  341D               	retlw	29
   621  018B  3401               	retlw	1
   622  018C  3415               	retlw	21
   623  018D  3401               	retlw	1
   624  018E  340E               	retlw	14
   625  018F  3401               	retlw	1
   626  0190  3406               	retlw	6
   627  0191  3401               	retlw	1
   628  0192  34FF               	retlw	255
   629  0193  3400               	retlw	0
   630  0194  34F8               	retlw	248
   631  0195  3400               	retlw	0
   632  0196  34F1               	retlw	241
   633  0197  3400               	retlw	0
   634  0198  34EA               	retlw	234
   635  0199  3400               	retlw	0
   636  019A  34E3               	retlw	227
   637  019B  3400               	retlw	0
   638  019C  34DC               	retlw	220
   639  019D  3400               	retlw	0
   640  019E  34D6               	retlw	214
   641  019F  3400               	retlw	0
   642  01A0  34D2               	retlw	210
   643  01A1  3400               	retlw	0
   644  01A2  34CC               	retlw	204
   645  01A3  3400               	retlw	0
   646  01A4  34C6               	retlw	198
   647  01A5  3400               	retlw	0
   648  01A6  34C0               	retlw	192
   649  01A7  3400               	retlw	0
   650  01A8  34BA               	retlw	186
   651  01A9  3400               	retlw	0
   652  01AA  34B1               	retlw	177
   653  01AB  3400               	retlw	0
   654  01AC  34B1               	retlw	177
   655  01AD  3400               	retlw	0
   656  01AE  34A7               	retlw	167
   657  01AF  3400               	retlw	0
   658  01B0  34A3               	retlw	163
   659  01B1  3400               	retlw	0
   660  01B2  349E               	retlw	158
   661  01B3  3400               	retlw	0
   662  01B4  349A               	retlw	154
   663  01B5  3400               	retlw	0
   664  01B6  3495               	retlw	149
   665  01B7  3400               	retlw	0
   666  01B8  3491               	retlw	145
   667  01B9  3400               	retlw	0
   668  01BA  348D               	retlw	141
   669  01BB  3400               	retlw	0
   670  01BC  3489               	retlw	137
   671  01BD  3400               	retlw	0
   672  01BE  3485               	retlw	133
   673  01BF  3400               	retlw	0
   674  01C0  3481               	retlw	129
   675  01C1  3400               	retlw	0
   676  01C2  347D               	retlw	125
   677  01C3  3400               	retlw	0
   678  01C4  3479               	retlw	121
   679  01C5  3400               	retlw	0
   680  01C6  3476               	retlw	118
   681  01C7  3400               	retlw	0
   682  01C8  3474               	retlw	116
   683  01C9  3400               	retlw	0
   684  01CA  3470               	retlw	112
   685  01CB  3400               	retlw	0
   686  01CC  346D               	retlw	109
   687  01CD  3400               	retlw	0
   688  01CE  346A               	retlw	106
   689  01CF  3400               	retlw	0
   690  01D0  3467               	retlw	103
   691  01D1  3400               	retlw	0
   692  01D2  3463               	retlw	99
   693  01D3  3400               	retlw	0
   694  01D4  3460               	retlw	96
   695  01D5  3400               	retlw	0
   696  01D6  345D               	retlw	93
   697  01D7  3400               	retlw	0
   698  01D8  345A               	retlw	90
   699  01D9  3400               	retlw	0
   700  01DA  3456               	retlw	86
   701  01DB  3400               	retlw	0
   702  01DC  3455               	retlw	85
   703  01DD  3400               	retlw	0
   704  01DE  3453               	retlw	83
   705  01DF  3400               	retlw	0
   706  01E0  3450               	retlw	80
   707  01E1  3400               	retlw	0
   708  01E2  344E               	retlw	78
   709  01E3  3400               	retlw	0
   710  01E4  344C               	retlw	76
   711  01E5  3400               	retlw	0
   712  01E6  344A               	retlw	74
   713  01E7  3400               	retlw	0
   714  01E8  3448               	retlw	72
   715  01E9  3400               	retlw	0
   716  01EA  3446               	retlw	70
   717  01EB  3400               	retlw	0
   718  01EC  3444               	retlw	68
   719  01ED  3400               	retlw	0
   720  01EE  3442               	retlw	66
   721  01EF  3400               	retlw	0
   722  01F0  3441               	retlw	65
   723  01F1  3400               	retlw	0
   724  01F2  343F               	retlw	63
   725  01F3  3400               	retlw	0
   726  01F4  343D               	retlw	61
   727  01F5  3400               	retlw	0
   728  01F6  343C               	retlw	60
   729  01F7  3400               	retlw	0
   730  01F8  343A               	retlw	58
   731  01F9  3400               	retlw	0
   732  01FA  3438               	retlw	56
   733  01FB  3400               	retlw	0
   734  01FC  3437               	retlw	55
   735  01FD  3400               	retlw	0
   736  01FE  3435               	retlw	53
   737  01FF  3400               	retlw	0
   738  0200  3434               	retlw	52
   739  0201  3400               	retlw	0
   740  0202  3432               	retlw	50
   741  0203  3400               	retlw	0
   742  0204                     __end_of_ThermValueLUT:
   743  0204                     _TempLUT:
   744  0204  34F6               	retlw	-10
   745  0205  34F7               	retlw	-9
   746  0206  34F8               	retlw	-8
   747  0207  34F9               	retlw	-7
   748  0208  34FA               	retlw	-6
   749  0209  34FB               	retlw	-5
   750  020A  34FC               	retlw	-4
   751  020B  34FD               	retlw	-3
   752  020C  34FE               	retlw	-2
   753  020D  34FF               	retlw	-1
   754  020E  3400               	retlw	0
   755  020F  3401               	retlw	1
   756  0210  3402               	retlw	2
   757  0211  3403               	retlw	3
   758  0212  3404               	retlw	4
   759  0213  3405               	retlw	5
   760  0214  3406               	retlw	6
   761  0215  3407               	retlw	7
   762  0216  3408               	retlw	8
   763  0217  3409               	retlw	9
   764  0218  340A               	retlw	10
   765  0219  340B               	retlw	11
   766  021A  340C               	retlw	12
   767  021B  340D               	retlw	13
   768  021C  340E               	retlw	14
   769  021D  340F               	retlw	15
   770  021E  3410               	retlw	16
   771  021F  3411               	retlw	17
   772  0220  3412               	retlw	18
   773  0221  3413               	retlw	19
   774  0222  3414               	retlw	20
   775  0223  3415               	retlw	21
   776  0224  3416               	retlw	22
   777  0225  3417               	retlw	23
   778  0226  3418               	retlw	24
   779  0227  3419               	retlw	25
   780  0228  341A               	retlw	26
   781  0229  341B               	retlw	27
   782  022A  341C               	retlw	28
   783  022B  341D               	retlw	29
   784  022C  341E               	retlw	30
   785  022D  341F               	retlw	31
   786  022E  3420               	retlw	32
   787  022F  3421               	retlw	33
   788  0230  3422               	retlw	34
   789  0231  3423               	retlw	35
   790  0232  3424               	retlw	36
   791  0233  3425               	retlw	37
   792  0234  3426               	retlw	38
   793  0235  3427               	retlw	39
   794  0236  3428               	retlw	40
   795  0237  3429               	retlw	41
   796  0238  342A               	retlw	42
   797  0239  342B               	retlw	43
   798  023A  342C               	retlw	44
   799  023B  342D               	retlw	45
   800  023C  342E               	retlw	46
   801  023D  342F               	retlw	47
   802  023E  3430               	retlw	48
   803  023F  3431               	retlw	49
   804  0240  3432               	retlw	50
   805  0241  3433               	retlw	51
   806  0242  3434               	retlw	52
   807  0243  3435               	retlw	53
   808  0244  3436               	retlw	54
   809  0245  3437               	retlw	55
   810  0246  3438               	retlw	56
   811  0247  3439               	retlw	57
   812  0248  343A               	retlw	58
   813  0249  343B               	retlw	59
   814  024A  343C               	retlw	60
   815  024B  343D               	retlw	61
   816  024C  343E               	retlw	62
   817  024D  343F               	retlw	63
   818  024E  3440               	retlw	64
   819  024F  3441               	retlw	65
   820  0250  3442               	retlw	66
   821  0251  3443               	retlw	67
   822  0252  3444               	retlw	68
   823  0253  3445               	retlw	69
   824  0254  3446               	retlw	70
   825  0255  3447               	retlw	71
   826  0256  3448               	retlw	72
   827  0257  3449               	retlw	73
   828  0258  344A               	retlw	74
   829  0259  344B               	retlw	75
   830  025A  344C               	retlw	76
   831  025B  344D               	retlw	77
   832  025C  344E               	retlw	78
   833  025D  344F               	retlw	79
   834  025E  3450               	retlw	80
   835  025F  3451               	retlw	81
   836  0260  3452               	retlw	82
   837  0261  3453               	retlw	83
   838  0262  3454               	retlw	84
   839  0263  3455               	retlw	85
   840  0264  3456               	retlw	86
   841  0265  3457               	retlw	87
   842  0266  3458               	retlw	88
   843  0267  3459               	retlw	89
   844  0268  345A               	retlw	90
   845  0269  345B               	retlw	91
   846  026A  345C               	retlw	92
   847  026B  345D               	retlw	93
   848  026C  345E               	retlw	94
   849  026D  345F               	retlw	95
   850  026E  3460               	retlw	96
   851  026F  3461               	retlw	97
   852  0270  3462               	retlw	98
   853  0271  3463               	retlw	99
   854  0272  3464               	retlw	100
   855  0273  3465               	retlw	101
   856  0274  3466               	retlw	102
   857  0275  3467               	retlw	103
   858  0276  3468               	retlw	104
   859  0277  3469               	retlw	105
   860  0278  346A               	retlw	106
   861  0279  346B               	retlw	107
   862  027A  346C               	retlw	108
   863  027B  346D               	retlw	109
   864  027C  346E               	retlw	110
   865  027D                     __end_of_TempLUT:
   866  000E                     _TMR1	set	14
   867  0007                     _PORTCbits	set	7
   868  0007                     _PORTC	set	7
   869  001E                     _ADRESH	set	30
   870  001F                     _ADCON0bits	set	31
   871  001F                     _ADCON0	set	31
   872  0006                     _PORTBbits	set	6
   873  000C                     _PIR1bits	set	12
   874  0010                     _T1CONbits	set	16
   875  0010                     _T1CON	set	16
   876  0006                     _PORTB	set	6
   877  0005                     _PORTA	set	5
   878  000B                     _INTCONbits	set	11
   879  005F                     _GIE	set	95
   880  0087                     _TRISC	set	135
   881  009E                     _ADRESL	set	158
   882  009F                     _ADCON1	set	159
   883  0096                     _IOCBbits	set	150
   884  008C                     _PIE1bits	set	140
   885  0086                     _TRISB	set	134
   886  0085                     _TRISA	set	133
   887  0189                     _ANSELH	set	393
   888  0188                     _ANSEL	set	392
   889  027D                     STR_1:
   890  027D  3454               	retlw	84	;'T'
   891  027E  3465               	retlw	101	;'e'
   892  027F  346D               	retlw	109	;'m'
   893  0280  3470               	retlw	112	;'p'
   894  0281  3420               	retlw	32	;' '
   895  0282  343D               	retlw	61	;'='
   896  0283  3420               	retlw	32	;' '
   897  0284  3400               	retlw	0
   898  0285                     STR_4:
   899  0285  3464               	retlw	100	;'d'
   900  0286  3465               	retlw	101	;'e'
   901  0287  3467               	retlw	103	;'g'
   902  0288  3420               	retlw	32	;' '
   903  0289  3443               	retlw	67	;'C'
   904  028A  3400               	retlw	0
   905  028B                     STR_2:
   906  028B  3464               	retlw	100	;'d'
   907  028C  3465               	retlw	101	;'e'
   908  028D  3467               	retlw	103	;'g'
   909  028E  3420               	retlw	32	;' '
   910  028F  3446               	retlw	70	;'F'
   911  0290  3400               	retlw	0
   912  0291                     STR_5:
   913  0291  346D               	retlw	109	;'m'
   914  0292  3469               	retlw	105	;'i'
   915  0293  346E               	retlw	110	;'n'
   916  0294  343D               	retlw	61	;'='
   917  0295  3400               	retlw	0
   918  0296                     STR_6:
   919  0296  346D               	retlw	109	;'m'
   920  0297  3461               	retlw	97	;'a'
   921  0298  3478               	retlw	120	;'x'
   922  0299  343D               	retlw	61	;'='
   923  029A  3400               	retlw	0
   924  029B                     STR_7:
   925  029B  3445               	retlw	69	;'E'
   926  029C  3452               	retlw	82	;'R'
   927  029D  3452               	retlw	82	;'R'
   928  029E  3400               	retlw	0
   929  027D                     
   930                           	psect	cinit
   931  000B                     start_initialization:	
   932                           ; #config settings
   933                           
   934  000B                     __initialization:
   935                           
   936                           ; Initialize objects allocated to BANK0
   937  000B  27FC               	fcall	__pidataBANK0	;fetch initializer
   938  000C  00E0               	movwf	__pdataBANK0& (0+127)
   939  000D  27FD               	fcall	__pidataBANK0+1	;fetch initializer
   940  000E  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   941  000F  27FE               	fcall	__pidataBANK0+2	;fetch initializer
   942  0010  00E2               	movwf	(__pdataBANK0+2)& (0+127)
   943  0011  27FF               	fcall	__pidataBANK0+3	;fetch initializer
   944  0012  00E3               	movwf	(__pdataBANK0+3)& (0+127)
   945                           
   946                           ; Clear objects allocated to BANK0
   947  0013  01D6               	clrf	__pbssBANK0& (0+127)
   948  0014  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   949  0015  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   950  0016  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   951  0017  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   952  0018  01DB               	clrf	(__pbssBANK0+5)& (0+127)
   953  0019  01DC               	clrf	(__pbssBANK0+6)& (0+127)
   954  001A  01DD               	clrf	(__pbssBANK0+7)& (0+127)
   955  001B  01DE               	clrf	(__pbssBANK0+8)& (0+127)
   956  001C  01DF               	clrf	(__pbssBANK0+9)& (0+127)
   957                           
   958                           ; Clear objects allocated to COMMON
   959  001D  01F8               	clrf	__pbssCOMMON& (0+127)
   960  001E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   961  001F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   962  0020                     end_of_initialization:	
   963                           ;End of C runtime variable initialization code
   964                           
   965  0020                     __end_of__initialization:
   966  0020  0183               	clrf	3
   967  0021  2FF6               	ljmp	_main	;jump to C main() function
   968                           
   969                           	psect	bssCOMMON
   970  0078                     __pbssCOMMON:
   971  0078                     _temp:
   972  0078                     	ds	2
   973  007A                     _convert:
   974  007A                     	ds	1
   975                           
   976                           	psect	bssBANK0
   977  0056                     __pbssBANK0:
   978  0056                     _highF:
   979  0056                     	ds	2
   980  0058                     _lowF:
   981  0058                     	ds	2
   982  005A                     _high:
   983  005A                     	ds	2
   984  005C                     _bar:
   985  005C                     	ds	1
   986  005D                     _result:
   987  005D                     	ds	1
   988  005E                     _count2:
   989  005E                     	ds	1
   990  005F                     _count:
   991  005F                     	ds	1
   992                           
   993                           	psect	dataBANK0
   994  0060                     __pdataBANK0:
   995  0060                     _low:
   996  0060                     	ds	2
   997  0062                     _temparraysize:
   998  0062                     	ds	1
   999  0063                     _updateScreen:
  1000  0063                     	ds	1
  1001                           
  1002                           	psect	cstackCOMMON
  1003  0070                     __pcstackCOMMON:
  1004  0070                     ?_config:
  1005  0070                     ?_LCD_initialise:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?_ADC_initialise:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?_tempDisplay:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ?_LCD_clear:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?_ADC_channel_select:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_HighLow:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ?_ledBarChartC:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ?_main:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ?_myISR:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ??_myISR:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ?_LCD_putch:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0070                     ?_LCD_puts:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x0
  1043  0070                     	ds	3
  1044  0073                     ??_config:
  1045  0073                     ??_ADC_initialise:	
  1046                           ; 1 bytes @ 0x3
  1047                           
  1048  0073                     ??_ADC_channel_select:	
  1049                           ; 1 bytes @ 0x3
  1050                           
  1051  0073                     ?_LCD_write:	
  1052                           ; 1 bytes @ 0x3
  1053                           
  1054  0073                     ??___lldiv:	
  1055                           ; 1 bytes @ 0x3
  1056                           
  1057  0073                     ??___llmod:	
  1058                           ; 1 bytes @ 0x3
  1059                           
  1060  0073                     ?_ADC_read:	
  1061                           ; 1 bytes @ 0x3
  1062                           
  1063  0073                     ?___wmul:	
  1064                           ; 2 bytes @ 0x3
  1065                           
  1066  0073                     LCD_write@rs:	
  1067                           ; 2 bytes @ 0x3
  1068                           
  1069  0073                     ___wmul@multiplier:	
  1070                           ; 1 bytes @ 0x3
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x3
  1074  0073                     	ds	1
  1075  0074                     ??_LCD_write:
  1076  0074                     ADC_channel_select@channel:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0074                     ___llmod@counter:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082                           
  1083                           ; 1 bytes @ 0x4
  1084  0074                     	ds	1
  1085  0075                     ??_LCD_clear:
  1086  0075                     ?_LCD_cursor:	
  1087                           ; 1 bytes @ 0x5
  1088                           
  1089  0075                     ??_ADC_read:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092  0075                     ??_ultoa:	
  1093                           ; 1 bytes @ 0x5
  1094                           
  1095  0075                     ??_LCD_putch:	
  1096                           ; 1 bytes @ 0x5
  1097                           
  1098  0075                     LCD_putch@c:	
  1099                           ; 1 bytes @ 0x5
  1100                           
  1101  0075                     LCD_cursor@y:	
  1102                           ; 1 bytes @ 0x5
  1103                           
  1104  0075                     ADC_read@result:	
  1105                           ; 1 bytes @ 0x5
  1106                           
  1107  0075                     LCD_clear@counter:	
  1108                           ; 2 bytes @ 0x5
  1109                           
  1110  0075                     ___wmul@multiplicand:	
  1111                           ; 2 bytes @ 0x5
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x5
  1115  0075                     	ds	1
  1116  0076                     ??_LCD_cursor:
  1117  0076                     ??_ltoa:	
  1118                           ; 1 bytes @ 0x6
  1119                           
  1120  0076                     LCD_putch@counter:	
  1121                           ; 1 bytes @ 0x6
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0x6
  1125  0076                     	ds	1
  1126  0077                     ??_LCD_initialise:
  1127  0077                     ??___wmul:	
  1128                           ; 1 bytes @ 0x7
  1129                           
  1130  0077                     ??___awdiv:	
  1131                           ; 1 bytes @ 0x7
  1132                           
  1133  0077                     LCD_cursor@x:	
  1134                           ; 1 bytes @ 0x7
  1135                           
  1136  0077                     GetThermistorTemp@i:	
  1137                           ; 1 bytes @ 0x7
  1138                           
  1139  0077                     ltoa@buf:	
  1140                           ; 1 bytes @ 0x7
  1141                           
  1142                           
  1143                           ; 1 bytes @ 0x7
  1144  0077                     	ds	1
  1145  0078                     ??_tempDisplay:
  1146  0078                     ??_convertToF:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149  0078                     ??_LCD_display_value:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0078                     ??_displayHighLow:	
  1153                           ; 1 bytes @ 0x8
  1154                           
  1155  0078                     ??_main:	
  1156                           ; 1 bytes @ 0x8
  1157                           
  1158                           
  1159                           	psect	cstackBANK0
  1160  0020                     __pcstackBANK0:	
  1161                           ; 1 bytes @ 0x8
  1162                           
  1163  0020                     ?_GetThermistorTemp:
  1164  0020                     ?___lldiv:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0020                     ?___llmod:	
  1168                           ; 4 bytes @ 0x0
  1169                           
  1170  0020                     LCD_write@temp:	
  1171                           ; 4 bytes @ 0x0
  1172                           
  1173  0020                     GetThermistorTemp@ADCValue:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0020                     ___wmul@product:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179  0020                     ___lldiv@divisor:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182  0020                     ___llmod@divisor:	
  1183                           ; 4 bytes @ 0x0
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x0
  1187  0020                     	ds	1
  1188  0021                     LCD_write@intsON:
  1189                           
  1190                           ; 1 bytes @ 0x1
  1191  0021                     	ds	1
  1192  0022                     ??_GetThermistorTemp:
  1193  0022                     ?___awdiv:	
  1194                           ; 1 bytes @ 0x2
  1195                           
  1196  0022                     LCD_write@TRISC_BAK:	
  1197                           ; 2 bytes @ 0x2
  1198                           
  1199  0022                     ___awdiv@divisor:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x2
  1204  0022                     	ds	1
  1205  0023                     LCD_write@c:
  1206                           
  1207                           ; 1 bytes @ 0x3
  1208  0023                     	ds	1
  1209  0024                     LCD_write@RSmask:
  1210  0024                     ___awdiv@dividend:	
  1211                           ; 1 bytes @ 0x4
  1212                           
  1213  0024                     ___lldiv@dividend:	
  1214                           ; 2 bytes @ 0x4
  1215                           
  1216  0024                     ___llmod@dividend:	
  1217                           ; 4 bytes @ 0x4
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x4
  1221  0024                     	ds	1
  1222  0025                     LCD_write@counter:
  1223                           
  1224                           ; 2 bytes @ 0x5
  1225  0025                     	ds	1
  1226  0026                     ___awdiv@counter:
  1227                           
  1228                           ; 1 bytes @ 0x6
  1229  0026                     	ds	1
  1230  0027                     ?_LCD_putsc:
  1231  0027                     ??_LCD_puts:	
  1232                           ; 1 bytes @ 0x7
  1233                           
  1234  0027                     ___awdiv@sign:	
  1235                           ; 1 bytes @ 0x7
  1236                           
  1237  0027                     LCD_initialise@counter:	
  1238                           ; 1 bytes @ 0x7
  1239                           
  1240  0027                     LCD_putsc@s:	
  1241                           ; 2 bytes @ 0x7
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x7
  1245  0027                     	ds	1
  1246  0028                     ___awdiv@quotient:
  1247  0028                     ___lldiv@quotient:	
  1248                           ; 2 bytes @ 0x8
  1249                           
  1250                           
  1251                           ; 4 bytes @ 0x8
  1252  0028                     	ds	1
  1253  0029                     ??_LCD_putsc:
  1254  0029                     LCD_puts@s:	
  1255                           ; 1 bytes @ 0x9
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x9
  1259  0029                     	ds	1
  1260  002A                     ??_ledBarChartC:
  1261  002A                     ?_convertToF:	
  1262                           ; 1 bytes @ 0xA
  1263                           
  1264  002A                     LCD_puts@i:	
  1265                           ; 2 bytes @ 0xA
  1266                           
  1267  002A                     LCD_putsc@i:	
  1268                           ; 1 bytes @ 0xA
  1269                           
  1270  002A                     convertToF@t:	
  1271                           ; 1 bytes @ 0xA
  1272                           
  1273                           
  1274                           ; 2 bytes @ 0xA
  1275  002A                     	ds	1
  1276  002B                     LCD_puts@c:
  1277  002B                     LCD_putsc@c:	
  1278                           ; 1 bytes @ 0xB
  1279                           
  1280                           
  1281                           ; 1 bytes @ 0xB
  1282  002B                     	ds	1
  1283  002C                     ___lldiv@counter:
  1284  002C                     convertToF@converted:	
  1285                           ; 1 bytes @ 0xC
  1286                           
  1287                           
  1288                           ; 2 bytes @ 0xC
  1289  002C                     	ds	1
  1290  002D                     ?_ultoa:
  1291  002D                     ultoa@val:	
  1292                           ; 1 bytes @ 0xD
  1293                           
  1294                           
  1295                           ; 4 bytes @ 0xD
  1296  002D                     	ds	4
  1297  0031                     ultoa@base:
  1298                           
  1299                           ; 2 bytes @ 0x11
  1300  0031                     	ds	2
  1301  0033                     ultoa@v:
  1302                           
  1303                           ; 4 bytes @ 0x13
  1304  0033                     	ds	4
  1305  0037                     ultoa@c:
  1306                           
  1307                           ; 1 bytes @ 0x17
  1308  0037                     	ds	1
  1309  0038                     ultoa@buf:
  1310                           
  1311                           ; 1 bytes @ 0x18
  1312  0038                     	ds	1
  1313  0039                     ?_ltoa:
  1314  0039                     ltoa@val:	
  1315                           ; 1 bytes @ 0x19
  1316                           
  1317                           
  1318                           ; 4 bytes @ 0x19
  1319  0039                     	ds	4
  1320  003D                     ltoa@base:
  1321                           
  1322                           ; 2 bytes @ 0x1D
  1323  003D                     	ds	2
  1324  003F                     ?_LCD_display_value:
  1325  003F                     LCD_display_value@value:	
  1326                           ; 1 bytes @ 0x1F
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x1F
  1330  003F                     	ds	4
  1331  0043                     LCD_display_value@buffer:
  1332                           
  1333                           ; 12 bytes @ 0x23
  1334  0043                     	ds	12
  1335  004F                     ?_displayHighLow:
  1336  004F                     displayHighLow@min:	
  1337                           ; 1 bytes @ 0x2F
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0x2F
  1341  004F                     	ds	2
  1342  0051                     displayHighLow@max:
  1343                           
  1344                           ; 2 bytes @ 0x31
  1345  0051                     	ds	2
  1346  0053                     ??_HighLow:
  1347                           
  1348                           ; 1 bytes @ 0x33
  1349  0053                     	ds	3
  1350                           
  1351                           	psect	maintext
  1352  07F6                     __pmaintext:	
  1353 ;;
  1354 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1355 ;;
  1356 ;; *************** function _main *****************
  1357 ;; Defined at:
  1358 ;;		line 48 in file "Assignment4U2061093.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : B00/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1
  1372 ;;      Params:         0       0       0
  1373 ;;      Locals:         0       0       0
  1374 ;;      Temps:          0       0       0
  1375 ;;      Totals:         0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels required when called: 8
  1378 ;; This function calls:
  1379 ;;		_ADC_initialise
  1380 ;;		_LCD_initialise
  1381 ;;		_config
  1382 ;;		_tempDisplay
  1383 ;; This function is called by:
  1384 ;;		Startup code after reset
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388  07F6                     _main:	
  1389                           ;psect for function _main
  1390                           
  1391  07F6                     l2427:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394                           
  1395                           
  1396                           ;Assignment4U2061093.c: 50:     config();
  1397  07F6  27B5               	fcall	_config
  1398                           
  1399                           ;Assignment4U2061093.c: 52:     LCD_initialise();
  1400  07F7  2432               	fcall	_LCD_initialise
  1401                           
  1402                           ;Assignment4U2061093.c: 53:     ADC_initialise();
  1403  07F8  27DE               	fcall	_ADC_initialise
  1404  07F9                     l2429:
  1405                           
  1406                           ;Assignment4U2061093.c: 58:         tempDisplay();
  1407  07F9  24A2               	fcall	_tempDisplay
  1408  07FA  2FF9               	goto	l2429
  1409  07FB  280A               	ljmp	start
  1410  07FC                     __end_of_main:
  1411                           
  1412                           	psect	text1
  1413  04A2                     __ptext1:	
  1414 ;; *************** function _tempDisplay *****************
  1415 ;; Defined at:
  1416 ;;		line 92 in file "Assignment4U2061093.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1
  1430 ;;      Params:         0       0       0
  1431 ;;      Locals:         0       0       0
  1432 ;;      Temps:          0       0       0
  1433 ;;      Totals:         0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 7
  1437 ;; This function calls:
  1438 ;;		_ADC_channel_select
  1439 ;;		_ADC_read
  1440 ;;		_GetThermistorTemp
  1441 ;;		_HighLow
  1442 ;;		_LCD_clear
  1443 ;;		_LCD_cursor
  1444 ;;		_LCD_display_value
  1445 ;;		_LCD_putsc
  1446 ;;		_convertToF
  1447 ;;		_ledBarChartC
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453  04A2                     _tempDisplay:	
  1454                           ;psect for function _tempDisplay
  1455                           
  1456  04A2                     l2391:	
  1457                           ;incstack = 0
  1458                           ; Regs used in _tempDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1459                           
  1460                           
  1461                           ;Assignment4U2061093.c: 93:     if (updateScreen == 1){
  1462  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1463  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1464  04A4  0363               	decf	_updateScreen,w
  1465  04A5  1D03               	btfss	3,2
  1466  04A6  2CA8               	goto	u2121
  1467  04A7  2CA9               	goto	u2120
  1468  04A8                     u2121:
  1469  04A8  2D0B               	goto	l97
  1470  04A9                     u2120:
  1471  04A9                     l2393:
  1472                           
  1473                           ;Assignment4U2061093.c: 94:         LCD_clear();
  1474  04A9  2022               	fcall	_LCD_clear
  1475  04AA                     l2395:
  1476                           
  1477                           ;Assignment4U2061093.c: 95:         updateScreen = 0;
  1478  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1479  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1480  04AC  01E3               	clrf	_updateScreen
  1481  04AD                     l2397:
  1482                           
  1483                           ;Assignment4U2061093.c: 96:         LCD_cursor(0,0);
  1484  04AD  01F5               	clrf	LCD_cursor@y
  1485  04AE  3000               	movlw	0
  1486  04AF  209C               	fcall	_LCD_cursor
  1487  04B0                     l2399:
  1488                           
  1489                           ;Assignment4U2061093.c: 98:         ADC_channel_select(11);
  1490  04B0  300B               	movlw	11
  1491  04B1  20C3               	fcall	_ADC_channel_select
  1492  04B2                     l2401:
  1493                           
  1494                           ;Assignment4U2061093.c: 99:         temp = GetThermistorTemp(ADC_read());
  1495  04B2  2087               	fcall	_ADC_read
  1496  04B3  0874               	movf	?_ADC_read+1,w
  1497  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1498  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1499  04B6  00A1               	movwf	GetThermistorTemp@ADCValue+1
  1500  04B7  0873               	movf	?_ADC_read,w
  1501  04B8  00A0               	movwf	GetThermistorTemp@ADCValue
  1502  04B9  26A7               	fcall	_GetThermistorTemp
  1503  04BA  00F8               	movwf	_temp
  1504  04BB  01F9               	clrf	_temp+1
  1505  04BC  1BF8               	btfsc	_temp,7
  1506  04BD  03F9               	decf	_temp+1,f
  1507  04BE                     l2403:
  1508                           
  1509                           ;Assignment4U2061093.c: 100:         if (convert == 1){
  1510  04BE  037A               	decf	_convert,w
  1511  04BF  1D03               	btfss	3,2
  1512  04C0  2CC2               	goto	u2131
  1513  04C1  2CC3               	goto	u2130
  1514  04C2                     u2131:
  1515  04C2  2CEC               	goto	l2415
  1516  04C3                     u2130:
  1517  04C3                     l2405:
  1518                           
  1519                           ;Assignment4U2061093.c: 102:             LCD_putsc("Temp = ");
  1520  04C3  307D               	movlw	low (STR_1| (0+32768))
  1521  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1522  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1523  04C6  00A7               	movwf	LCD_putsc@s
  1524  04C7  3082               	movlw	high (STR_1| (0+32768))
  1525  04C8  00A8               	movwf	LCD_putsc@s+1
  1526  04C9  2706               	fcall	_LCD_putsc
  1527  04CA                     l2407:
  1528                           
  1529                           ;Assignment4U2061093.c: 103:             temp = convertToF(temp);
  1530  04CA  0879               	movf	_temp+1,w
  1531  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1532  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1533  04CD  00AB               	movwf	convertToF@t+1
  1534  04CE  0878               	movf	_temp,w
  1535  04CF  00AA               	movwf	convertToF@t
  1536  04D0  204B               	fcall	_convertToF
  1537  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1538  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1539  04D3  082B               	movf	?_convertToF+1,w
  1540  04D4  00F9               	movwf	_temp+1
  1541  04D5  082A               	movf	?_convertToF,w
  1542  04D6  00F8               	movwf	_temp
  1543  04D7                     l2409:
  1544                           
  1545                           ;Assignment4U2061093.c: 104:             LCD_display_value(temp);
  1546  04D7  0878               	movf	_temp,w
  1547  04D8  00BF               	movwf	LCD_display_value@value
  1548  04D9  0879               	movf	_temp+1,w
  1549  04DA  00C0               	movwf	LCD_display_value@value+1
  1550  04DB  3000               	movlw	0
  1551  04DC  1BC0               	btfsc	LCD_display_value@value+1,7
  1552  04DD  30FF               	movlw	255
  1553  04DE  00C1               	movwf	LCD_display_value@value+2
  1554  04DF  00C2               	movwf	LCD_display_value@value+3
  1555  04E0  20B0               	fcall	_LCD_display_value
  1556  04E1                     l2411:
  1557                           
  1558                           ;Assignment4U2061093.c: 105:             LCD_cursor(10,0);
  1559  04E1  01F5               	clrf	LCD_cursor@y
  1560  04E2  300A               	movlw	10
  1561  04E3  209C               	fcall	_LCD_cursor
  1562  04E4                     l2413:
  1563                           
  1564                           ;Assignment4U2061093.c: 106:             LCD_putsc("deg F");
  1565  04E4  308B               	movlw	low (STR_2| (0+32768))
  1566  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1567  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1568  04E7  00A7               	movwf	LCD_putsc@s
  1569  04E8  3082               	movlw	high (STR_2| (0+32768))
  1570  04E9  00A8               	movwf	LCD_putsc@s+1
  1571  04EA  2706               	fcall	_LCD_putsc
  1572                           
  1573                           ;Assignment4U2061093.c: 108:         }
  1574  04EB  2D09               	goto	l2423
  1575  04EC                     l2415:
  1576                           
  1577                           ;Assignment4U2061093.c: 110:             LCD_putsc("Temp = ");
  1578  04EC  307D               	movlw	low (STR_1| (0+32768))
  1579  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1580  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1581  04EF  00A7               	movwf	LCD_putsc@s
  1582  04F0  3082               	movlw	high (STR_1| (0+32768))
  1583  04F1  00A8               	movwf	LCD_putsc@s+1
  1584  04F2  2706               	fcall	_LCD_putsc
  1585  04F3                     l2417:
  1586                           
  1587                           ;Assignment4U2061093.c: 111:             LCD_display_value(temp);
  1588  04F3  0878               	movf	_temp,w
  1589  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1590  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1591  04F6  00BF               	movwf	LCD_display_value@value
  1592  04F7  0879               	movf	_temp+1,w
  1593  04F8  00C0               	movwf	LCD_display_value@value+1
  1594  04F9  3000               	movlw	0
  1595  04FA  1BC0               	btfsc	LCD_display_value@value+1,7
  1596  04FB  30FF               	movlw	255
  1597  04FC  00C1               	movwf	LCD_display_value@value+2
  1598  04FD  00C2               	movwf	LCD_display_value@value+3
  1599  04FE  20B0               	fcall	_LCD_display_value
  1600  04FF                     l2419:
  1601                           
  1602                           ;Assignment4U2061093.c: 112:             LCD_cursor(10,0);
  1603  04FF  01F5               	clrf	LCD_cursor@y
  1604  0500  300A               	movlw	10
  1605  0501  209C               	fcall	_LCD_cursor
  1606  0502                     l2421:
  1607                           
  1608                           ;Assignment4U2061093.c: 113:             LCD_putsc("deg C");
  1609  0502  3085               	movlw	low (STR_4| (0+32768))
  1610  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0505  00A7               	movwf	LCD_putsc@s
  1613  0506  3082               	movlw	high (STR_4| (0+32768))
  1614  0507  00A8               	movwf	LCD_putsc@s+1
  1615  0508  2706               	fcall	_LCD_putsc
  1616  0509                     l2423:
  1617                           
  1618                           ;Assignment4U2061093.c: 115:         HighLow();
  1619  0509  23B3               	fcall	_HighLow
  1620  050A                     l2425:
  1621                           
  1622                           ;Assignment4U2061093.c: 116:         ledBarChartC();
  1623  050A  2677               	fcall	_ledBarChartC
  1624  050B                     l97:
  1625  050B  0008               	return
  1626  050C                     __end_of_tempDisplay:
  1627                           
  1628                           	psect	text2
  1629  0677                     __ptext2:	
  1630 ;; *************** function _ledBarChartC *****************
  1631 ;; Defined at:
  1632 ;;		line 146 in file "Assignment4U2061093.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1
  1646 ;;      Params:         0       0       0
  1647 ;;      Locals:         0       0       0
  1648 ;;      Temps:          0       3       0
  1649 ;;      Totals:         0       3       0
  1650 ;;Total ram usage:        3 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 3
  1653 ;; This function calls:
  1654 ;;		_ADC_read
  1655 ;;		_GetThermistorTemp
  1656 ;;		___awdiv
  1657 ;; This function is called by:
  1658 ;;		_tempDisplay
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662  0677                     _ledBarChartC:	
  1663                           ;psect for function _ledBarChartC
  1664                           
  1665  0677                     l2323:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _ledBarChartC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1668                           
  1669                           
  1670                           ;Assignment4U2061093.c: 148:     result = GetThermistorTemp(ADC_read());
  1671  0677  2087               	fcall	_ADC_read
  1672  0678  0874               	movf	?_ADC_read+1,w
  1673  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1674  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1675  067B  00A1               	movwf	GetThermistorTemp@ADCValue+1
  1676  067C  0873               	movf	?_ADC_read,w
  1677  067D  00A0               	movwf	GetThermistorTemp@ADCValue
  1678  067E  26A7               	fcall	_GetThermistorTemp
  1679  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1680  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1681  0681  00AA               	movwf	??_ledBarChartC
  1682  0682  082A               	movf	??_ledBarChartC,w
  1683  0683  00DD               	movwf	_result
  1684  0684                     l2325:
  1685                           
  1686                           ;Assignment4U2061093.c: 149:     result = result/10;
  1687  0684  300A               	movlw	10
  1688  0685  00A2               	movwf	___awdiv@divisor
  1689  0686  3000               	movlw	0
  1690  0687  00A3               	movwf	___awdiv@divisor+1
  1691  0688  085D               	movf	_result,w
  1692  0689  00AA               	movwf	??_ledBarChartC
  1693  068A  01AB               	clrf	??_ledBarChartC+1
  1694  068B  082A               	movf	??_ledBarChartC,w
  1695  068C  00A4               	movwf	___awdiv@dividend
  1696  068D  082B               	movf	??_ledBarChartC+1,w
  1697  068E  00A5               	movwf	___awdiv@dividend+1
  1698  068F  250C               	fcall	___awdiv
  1699  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0692  0822               	movf	?___awdiv,w
  1702  0693  00AC               	movwf	??_ledBarChartC+2
  1703  0694  082C               	movf	??_ledBarChartC+2,w
  1704  0695  00DD               	movwf	_result
  1705  0696                     l2327:
  1706                           
  1707                           ;Assignment4U2061093.c: 152:         bar = (bar*2)+1;
  1708  0696  1403               	setc
  1709  0697  0DDC               	rlf	_bar,f
  1710  0698                     l2329:
  1711                           
  1712                           ;Assignment4U2061093.c: 153:         count2++;
  1713  0698  3001               	movlw	1
  1714  0699  00AA               	movwf	??_ledBarChartC
  1715  069A  082A               	movf	??_ledBarChartC,w
  1716  069B  07DE               	addwf	_count2,f
  1717  069C                     l2331:
  1718                           
  1719                           ;Assignment4U2061093.c: 154:         if(count2 == result){
  1720  069C  085E               	movf	_count2,w
  1721  069D  065D               	xorwf	_result,w
  1722  069E  1D03               	skipz
  1723  069F  2EA1               	goto	u2061
  1724  06A0  2EA2               	goto	u2060
  1725  06A1                     u2061:
  1726  06A1  2E96               	goto	l2327
  1727  06A2                     u2060:
  1728  06A2                     l2333:
  1729                           
  1730                           ;Assignment4U2061093.c: 155:             PORTA = bar;
  1731  06A2  085C               	movf	_bar,w
  1732  06A3  0085               	movwf	5	;volatile
  1733  06A4                     l2335:
  1734                           
  1735                           ;Assignment4U2061093.c: 156:             bar = 0;
  1736  06A4  01DC               	clrf	_bar
  1737  06A5                     l2337:
  1738                           
  1739                           ;Assignment4U2061093.c: 157:             count2 = 0;
  1740  06A5  01DE               	clrf	_count2
  1741  06A6                     l114:	
  1742                           ;Assignment4U2061093.c: 158:             break;
  1743                           
  1744  06A6  0008               	return
  1745  06A7                     __end_of_ledBarChartC:
  1746                           
  1747                           	psect	text3
  1748  03B3                     __ptext3:	
  1749 ;; *************** function _HighLow *****************
  1750 ;; Defined at:
  1751 ;;		line 127 in file "Assignment4U2061093.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1
  1765 ;;      Params:         0       0       0
  1766 ;;      Locals:         0       0       0
  1767 ;;      Temps:          0       3       0
  1768 ;;      Totals:         0       3       0
  1769 ;;Total ram usage:        3 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 6
  1772 ;; This function calls:
  1773 ;;		_ADC_read
  1774 ;;		_GetThermistorTemp
  1775 ;;		_convertToF
  1776 ;;		_displayHighLow
  1777 ;; This function is called by:
  1778 ;;		_tempDisplay
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782  03B3                     _HighLow:	
  1783                           ;psect for function _HighLow
  1784                           
  1785  03B3                     l2311:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _HighLow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1788                           
  1789                           
  1790                           ;Assignment4U2061093.c: 128:     if(GetThermistorTemp(ADC_read())>high){
  1791  03B3  2087               	fcall	_ADC_read
  1792  03B4  0874               	movf	?_ADC_read+1,w
  1793  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1794  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1795  03B7  00A1               	movwf	GetThermistorTemp@ADCValue+1
  1796  03B8  0873               	movf	?_ADC_read,w
  1797  03B9  00A0               	movwf	GetThermistorTemp@ADCValue
  1798  03BA  26A7               	fcall	_GetThermistorTemp
  1799  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1800  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1801  03BD  00D3               	movwf	??_HighLow
  1802  03BE  01D4               	clrf	??_HighLow+1
  1803  03BF  1BD3               	btfsc	??_HighLow,7
  1804  03C0  03D4               	decf	??_HighLow+1,f
  1805  03C1  085B               	movf	_high+1,w
  1806  03C2  3A80               	xorlw	128
  1807  03C3  00D5               	movwf	??_HighLow+2
  1808  03C4  0854               	movf	??_HighLow+1,w
  1809  03C5  3A80               	xorlw	128
  1810  03C6  0255               	subwf	??_HighLow+2,w
  1811  03C7  1D03               	skipz
  1812  03C8  2BCB               	goto	u2035
  1813  03C9  0853               	movf	??_HighLow,w
  1814  03CA  025A               	subwf	_high,w
  1815  03CB                     u2035:
  1816  03CB  1803               	skipnc
  1817  03CC  2BCE               	goto	u2031
  1818  03CD  2BCF               	goto	u2030
  1819  03CE                     u2031:
  1820  03CE  2BDD               	goto	l103
  1821  03CF                     u2030:
  1822  03CF                     l2313:
  1823                           
  1824                           ;Assignment4U2061093.c: 129:         high = GetThermistorTemp(ADC_read());
  1825  03CF  2087               	fcall	_ADC_read
  1826  03D0  0874               	movf	?_ADC_read+1,w
  1827  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1828  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1829  03D3  00A1               	movwf	GetThermistorTemp@ADCValue+1
  1830  03D4  0873               	movf	?_ADC_read,w
  1831  03D5  00A0               	movwf	GetThermistorTemp@ADCValue
  1832  03D6  26A7               	fcall	_GetThermistorTemp
  1833  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1834  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1835  03D9  00DA               	movwf	_high
  1836  03DA  01DB               	clrf	_high+1
  1837  03DB  1BDA               	btfsc	_high,7
  1838  03DC  03DB               	decf	_high+1,f
  1839  03DD                     l103:	
  1840                           ;Assignment4U2061093.c: 130:     }
  1841                           
  1842                           
  1843                           ;Assignment4U2061093.c: 131:     if(GetThermistorTemp(ADC_read())<low){
  1844  03DD  2087               	fcall	_ADC_read
  1845  03DE  0874               	movf	?_ADC_read+1,w
  1846  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1847  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1848  03E1  00A1               	movwf	GetThermistorTemp@ADCValue+1
  1849  03E2  0873               	movf	?_ADC_read,w
  1850  03E3  00A0               	movwf	GetThermistorTemp@ADCValue
  1851  03E4  26A7               	fcall	_GetThermistorTemp
  1852  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1853  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1854  03E7  00D3               	movwf	??_HighLow
  1855  03E8  01D4               	clrf	??_HighLow+1
  1856  03E9  1BD3               	btfsc	??_HighLow,7
  1857  03EA  03D4               	decf	??_HighLow+1,f
  1858  03EB  0854               	movf	??_HighLow+1,w
  1859  03EC  3A80               	xorlw	128
  1860  03ED  00D5               	movwf	??_HighLow+2
  1861  03EE  0861               	movf	_low+1,w
  1862  03EF  3A80               	xorlw	128
  1863  03F0  0255               	subwf	??_HighLow+2,w
  1864  03F1  1D03               	skipz
  1865  03F2  2BF5               	goto	u2045
  1866  03F3  0860               	movf	_low,w
  1867  03F4  0253               	subwf	??_HighLow,w
  1868  03F5                     u2045:
  1869  03F5  1803               	skipnc
  1870  03F6  2BF8               	goto	u2041
  1871  03F7  2BF9               	goto	u2040
  1872  03F8                     u2041:
  1873  03F8  2C07               	goto	l2317
  1874  03F9                     u2040:
  1875  03F9                     l2315:
  1876                           
  1877                           ;Assignment4U2061093.c: 132:         low = GetThermistorTemp(ADC_read());
  1878  03F9  2087               	fcall	_ADC_read
  1879  03FA  0874               	movf	?_ADC_read+1,w
  1880  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1881  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1882  03FD  00A1               	movwf	GetThermistorTemp@ADCValue+1
  1883  03FE  0873               	movf	?_ADC_read,w
  1884  03FF  00A0               	movwf	GetThermistorTemp@ADCValue
  1885  0400  26A7               	fcall	_GetThermistorTemp
  1886  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0403  00E0               	movwf	_low
  1889  0404  01E1               	clrf	_low+1
  1890  0405  1BE0               	btfsc	_low,7
  1891  0406  03E1               	decf	_low+1,f
  1892  0407                     l2317:
  1893                           
  1894                           ;Assignment4U2061093.c: 134:     if(convert == 1){
  1895  0407  037A               	decf	_convert,w
  1896  0408  1D03               	btfss	3,2
  1897  0409  2C0B               	goto	u2051
  1898  040A  2C0C               	goto	u2050
  1899  040B                     u2051:
  1900  040B  2C26               	goto	l2321
  1901  040C                     u2050:
  1902  040C                     l2319:
  1903                           
  1904                           ;Assignment4U2061093.c: 135:         displayHighLow(convertToF(low),convertToF(high));
  1905  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1906  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1907  040E  0861               	movf	_low+1,w
  1908  040F  00AB               	movwf	convertToF@t+1
  1909  0410  0860               	movf	_low,w
  1910  0411  00AA               	movwf	convertToF@t
  1911  0412  204B               	fcall	_convertToF
  1912  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0415  082B               	movf	?_convertToF+1,w
  1915  0416  00D0               	movwf	displayHighLow@min+1
  1916  0417  082A               	movf	?_convertToF,w
  1917  0418  00CF               	movwf	displayHighLow@min
  1918  0419  085B               	movf	_high+1,w
  1919  041A  00AB               	movwf	convertToF@t+1
  1920  041B  085A               	movf	_high,w
  1921  041C  00AA               	movwf	convertToF@t
  1922  041D  204B               	fcall	_convertToF
  1923  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1924  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0420  082B               	movf	?_convertToF+1,w
  1926  0421  00D2               	movwf	displayHighLow@max+1
  1927  0422  082A               	movf	?_convertToF,w
  1928  0423  00D1               	movwf	displayHighLow@max
  1929  0424  26D7               	fcall	_displayHighLow
  1930                           
  1931                           ;Assignment4U2061093.c: 138:     }
  1932  0425  2C31               	goto	l107
  1933  0426                     l2321:
  1934                           
  1935                           ;Assignment4U2061093.c: 140:         displayHighLow(low,high);
  1936  0426  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0427  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0428  0861               	movf	_low+1,w
  1939  0429  00D0               	movwf	displayHighLow@min+1
  1940  042A  0860               	movf	_low,w
  1941  042B  00CF               	movwf	displayHighLow@min
  1942  042C  085B               	movf	_high+1,w
  1943  042D  00D2               	movwf	displayHighLow@max+1
  1944  042E  085A               	movf	_high,w
  1945  042F  00D1               	movwf	displayHighLow@max
  1946  0430  26D7               	fcall	_displayHighLow
  1947  0431                     l107:
  1948  0431  0008               	return
  1949  0432                     __end_of_HighLow:
  1950                           
  1951                           	psect	text4
  1952  06D7                     __ptext4:	
  1953 ;; *************** function _displayHighLow *****************
  1954 ;; Defined at:
  1955 ;;		line 163 in file "Assignment4U2061093.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  min             2   47[BANK0 ] short 
  1958 ;;  max             2   49[BANK0 ] short 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1
  1970 ;;      Params:         0       4       0
  1971 ;;      Locals:         0       0       0
  1972 ;;      Temps:          0       0       0
  1973 ;;      Totals:         0       4       0
  1974 ;;Total ram usage:        4 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 5
  1977 ;; This function calls:
  1978 ;;		_LCD_cursor
  1979 ;;		_LCD_display_value
  1980 ;;		_LCD_putsc
  1981 ;; This function is called by:
  1982 ;;		_HighLow
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986  06D7                     _displayHighLow:	
  1987                           ;psect for function _displayHighLow
  1988                           
  1989  06D7                     l2281:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _displayHighLow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1992                           
  1993                           
  1994                           ;Assignment4U2061093.c: 164:         LCD_cursor(0,1);
  1995  06D7  01F5               	clrf	LCD_cursor@y
  1996  06D8  0AF5               	incf	LCD_cursor@y,f
  1997  06D9  3000               	movlw	0
  1998  06DA  209C               	fcall	_LCD_cursor
  1999  06DB                     l2283:
  2000                           
  2001                           ;Assignment4U2061093.c: 165:         LCD_putsc("min=");
  2002  06DB  3091               	movlw	low (STR_5| (0+32768))
  2003  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2004  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2005  06DE  00A7               	movwf	LCD_putsc@s
  2006  06DF  3082               	movlw	high (STR_5| (0+32768))
  2007  06E0  00A8               	movwf	LCD_putsc@s+1
  2008  06E1  2706               	fcall	_LCD_putsc
  2009  06E2                     l2285:
  2010                           
  2011                           ;Assignment4U2061093.c: 166:         LCD_display_value(min);
  2012  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2013  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2014  06E4  084F               	movf	displayHighLow@min,w
  2015  06E5  00BF               	movwf	LCD_display_value@value
  2016  06E6  0850               	movf	displayHighLow@min+1,w
  2017  06E7  00C0               	movwf	LCD_display_value@value+1
  2018  06E8  3000               	movlw	0
  2019  06E9  1BC0               	btfsc	LCD_display_value@value+1,7
  2020  06EA  30FF               	movlw	255
  2021  06EB  00C1               	movwf	LCD_display_value@value+2
  2022  06EC  00C2               	movwf	LCD_display_value@value+3
  2023  06ED  20B0               	fcall	_LCD_display_value
  2024  06EE                     l2287:
  2025                           
  2026                           ;Assignment4U2061093.c: 167:         LCD_cursor(9,1);
  2027  06EE  01F5               	clrf	LCD_cursor@y
  2028  06EF  0AF5               	incf	LCD_cursor@y,f
  2029  06F0  3009               	movlw	9
  2030  06F1  209C               	fcall	_LCD_cursor
  2031  06F2                     l2289:
  2032                           
  2033                           ;Assignment4U2061093.c: 168:         LCD_putsc("max=");
  2034  06F2  3096               	movlw	low (STR_6| (0+32768))
  2035  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2036  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  2037  06F5  00A7               	movwf	LCD_putsc@s
  2038  06F6  3082               	movlw	high (STR_6| (0+32768))
  2039  06F7  00A8               	movwf	LCD_putsc@s+1
  2040  06F8  2706               	fcall	_LCD_putsc
  2041                           
  2042                           ;Assignment4U2061093.c: 169:         LCD_display_value(max);
  2043  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  2044  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  2045  06FB  0851               	movf	displayHighLow@max,w
  2046  06FC  00BF               	movwf	LCD_display_value@value
  2047  06FD  0852               	movf	displayHighLow@max+1,w
  2048  06FE  00C0               	movwf	LCD_display_value@value+1
  2049  06FF  3000               	movlw	0
  2050  0700  1BC0               	btfsc	LCD_display_value@value+1,7
  2051  0701  30FF               	movlw	255
  2052  0702  00C1               	movwf	LCD_display_value@value+2
  2053  0703  00C2               	movwf	LCD_display_value@value+3
  2054  0704  20B0               	fcall	_LCD_display_value
  2055  0705                     l117:
  2056  0705  0008               	return
  2057  0706                     __end_of_displayHighLow:
  2058                           
  2059                           	psect	text5
  2060  0706                     __ptext5:	
  2061 ;; *************** function _LCD_putsc *****************
  2062 ;; Defined at:
  2063 ;;		line 166 in file "LCDdrive882.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  2066 ;;		 -> STR_7(4), STR_6(5), STR_5(5), STR_4(6), 
  2067 ;;		 -> STR_3(8), STR_2(6), STR_1(8), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  c               1   11[BANK0 ] unsigned char 
  2070 ;;  i               1   10[BANK0 ] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1
  2080 ;;      Params:         0       2       0
  2081 ;;      Locals:         0       2       0
  2082 ;;      Temps:          0       1       0
  2083 ;;      Totals:         0       5       0
  2084 ;;Total ram usage:        5 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 3
  2087 ;; This function calls:
  2088 ;;		_LCD_putch
  2089 ;; This function is called by:
  2090 ;;		_tempDisplay
  2091 ;;		_displayHighLow
  2092 ;;		_LCD_display_float
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096  0706                     _LCD_putsc:	
  2097                           ;psect for function _LCD_putsc
  2098                           
  2099  0706                     l2227:	
  2100                           ;incstack = 0
  2101                           ; Regs used in _LCD_putsc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2102                           
  2103                           
  2104                           ;LCDdrive882.c: 166: void LCD_putsc(const unsigned char *s);LCDdrive882.c: 167: {;LCDdri
      +                          ve882.c: 168:         unsigned char c = 255;
  2105  0706  30FF               	movlw	255
  2106  0707  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0708  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0709  00A9               	movwf	??_LCD_putsc
  2109  070A  0829               	movf	??_LCD_putsc,w
  2110  070B  00AB               	movwf	LCD_putsc@c
  2111  070C                     l2229:
  2112                           
  2113                           ;LCDdrive882.c: 169:         unsigned char i = 0;
  2114  070C  01AA               	clrf	LCD_putsc@i
  2115                           
  2116                           ;LCDdrive882.c: 170:         while ((c > 0) && (i < 16))
  2117  070D  2F26               	goto	l2239
  2118  070E                     l2231:
  2119                           
  2120                           ;LCDdrive882.c: 171:         {;LCDdrive882.c: 172:           c = s[i];
  2121  070E  082A               	movf	LCD_putsc@i,w
  2122  070F  0727               	addwf	LCD_putsc@s,w
  2123  0710  0084               	movwf	4
  2124  0711  0828               	movf	LCD_putsc@s+1,w
  2125  0712  1803               	skipnc
  2126  0713  0A28               	incf	LCD_putsc@s+1,w
  2127  0714  00FF               	movwf	btemp+1
  2128  0715  2100               	fcall	stringtab
  2129  0716  00A9               	movwf	??_LCD_putsc
  2130  0717  0829               	movf	??_LCD_putsc,w
  2131  0718  00AB               	movwf	LCD_putsc@c
  2132  0719                     l2233:
  2133                           
  2134                           ;LCDdrive882.c: 173:           if (c != 0) LCD_putch(c);
  2135  0719  082B               	movf	LCD_putsc@c,w
  2136  071A  1903               	btfsc	3,2
  2137  071B  2F1D               	goto	u1921
  2138  071C  2F1E               	goto	u1920
  2139  071D                     u1921:
  2140  071D  2F20               	goto	l2237
  2141  071E                     u1920:
  2142  071E                     l2235:
  2143  071E  082B               	movf	LCD_putsc@c,w
  2144  071F  2070               	fcall	_LCD_putch
  2145  0720                     l2237:
  2146                           
  2147                           ;LCDdrive882.c: 174:           i++;
  2148  0720  3001               	movlw	1
  2149  0721  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0722  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0723  00A9               	movwf	??_LCD_putsc
  2152  0724  0829               	movf	??_LCD_putsc,w
  2153  0725  07AA               	addwf	LCD_putsc@i,f
  2154  0726                     l2239:
  2155                           
  2156                           ;LCDdrive882.c: 170:         while ((c > 0) && (i < 16))
  2157  0726  082B               	movf	LCD_putsc@c,w
  2158  0727  1903               	btfsc	3,2
  2159  0728  2F2A               	goto	u1931
  2160  0729  2F2B               	goto	u1930
  2161  072A                     u1931:
  2162  072A  2F31               	goto	l229
  2163  072B                     u1930:
  2164  072B                     l2241:
  2165  072B  3010               	movlw	16
  2166  072C  022A               	subwf	LCD_putsc@i,w
  2167  072D  1C03               	skipc
  2168  072E  2F30               	goto	u1941
  2169  072F  2F31               	goto	u1940
  2170  0730                     u1941:
  2171  0730  2F0E               	goto	l2231
  2172  0731                     u1940:
  2173  0731                     l229:
  2174  0731  0008               	return
  2175  0732                     __end_of_LCD_putsc:
  2176                           
  2177                           	psect	text6
  2178  00B0                     __ptext6:	
  2179 ;; *************** function _LCD_display_value *****************
  2180 ;; Defined at:
  2181 ;;		line 204 in file "LCDdrive882.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  value           4   31[BANK0 ] long 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  buffer         12   35[BANK0 ] unsigned char [12]
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1
  2195 ;;      Params:         0       4       0
  2196 ;;      Locals:         0      12       0
  2197 ;;      Temps:          0       0       0
  2198 ;;      Totals:         0      16       0
  2199 ;;Total ram usage:       16 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 4
  2202 ;; This function calls:
  2203 ;;		_LCD_puts
  2204 ;;		_ltoa
  2205 ;; This function is called by:
  2206 ;;		_tempDisplay
  2207 ;;		_displayHighLow
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211  00B0                     _LCD_display_value:	
  2212                           ;psect for function _LCD_display_value
  2213                           
  2214  00B0                     l2243:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _LCD_display_value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2217                           
  2218                           
  2219                           ;LCDdrive882.c: 204: void LCD_display_value (long value);LCDdrive882.c: 205: {;LCDdrive8
      +                          82.c: 206:     char buffer[12];;LCDdrive882.c: 208:     ltoa(buffer, value, 10);
  2220  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  2221  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  2222  00B2  0842               	movf	LCD_display_value@value+3,w
  2223  00B3  00BC               	movwf	ltoa@val+3
  2224  00B4  0841               	movf	LCD_display_value@value+2,w
  2225  00B5  00BB               	movwf	ltoa@val+2
  2226  00B6  0840               	movf	LCD_display_value@value+1,w
  2227  00B7  00BA               	movwf	ltoa@val+1
  2228  00B8  083F               	movf	LCD_display_value@value,w
  2229  00B9  00B9               	movwf	ltoa@val
  2230  00BA  300A               	movlw	10
  2231  00BB  00BD               	movwf	ltoa@base
  2232  00BC  3000               	movlw	0
  2233  00BD  00BE               	movwf	ltoa@base+1
  2234  00BE  3043               	movlw	(low (LCD_display_value@buffer| 0))& (0+255)
  2235  00BF  2732               	fcall	_ltoa
  2236                           
  2237                           ;LCDdrive882.c: 209:     LCD_puts(buffer);
  2238  00C0  3043               	movlw	(low (LCD_display_value@buffer| 0))& (0+255)
  2239  00C1  275E               	fcall	_LCD_puts
  2240  00C2                     l243:
  2241  00C2  0008               	return
  2242  00C3                     __end_of_LCD_display_value:
  2243                           
  2244                           	psect	text7
  2245  0732                     __ptext7:	
  2246 ;; *************** function _ltoa *****************
  2247 ;; Defined at:
  2248 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ltoa.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  buf             1    wreg     PTR unsigned char 
  2251 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  2252 ;;  val             4   25[BANK0 ] long 
  2253 ;;  base            2   29[BANK0 ] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  buf             1    7[COMMON] PTR unsigned char 
  2256 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  2257 ;;  cp              1    0        PTR unsigned char 
  2258 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      PTR unsigned char 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1
  2268 ;;      Params:         0       6       0
  2269 ;;      Locals:         1       0       0
  2270 ;;      Temps:          1       0       0
  2271 ;;      Totals:         2       6       0
  2272 ;;Total ram usage:        8 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 3
  2275 ;; This function calls:
  2276 ;;		_ultoa
  2277 ;; This function is called by:
  2278 ;;		_LCD_display_value
  2279 ;;		_LCD_display_float
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283  0732                     _ltoa:	
  2284                           ;psect for function _ltoa
  2285                           
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _ltoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2289                           ;ltoa@buf stored from wreg
  2290  0732  00F7               	movwf	ltoa@buf
  2291  0733                     l2205:
  2292  0733                     l2207:
  2293  0733  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0734  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0735  1FBC               	btfss	ltoa@val+3,7
  2296  0736  2F38               	goto	u1901
  2297  0737  2F39               	goto	u1900
  2298  0738                     u1901:
  2299  0738  2F4F               	goto	l2215
  2300  0739                     u1900:
  2301  0739                     l2209:
  2302  0739  302D               	movlw	45
  2303  073A  00F6               	movwf	??_ltoa
  2304  073B  0877               	movf	ltoa@buf,w
  2305  073C  0084               	movwf	4
  2306  073D  0876               	movf	??_ltoa,w
  2307  073E  1383               	bcf	3,7	;select IRP bank0
  2308  073F  0080               	movwf	0
  2309  0740                     l2211:
  2310  0740  3001               	movlw	1
  2311  0741  00F6               	movwf	??_ltoa
  2312  0742  0876               	movf	??_ltoa,w
  2313  0743  07F7               	addwf	ltoa@buf,f
  2314  0744                     l2213:
  2315  0744  09B9               	comf	ltoa@val,f
  2316  0745  09BA               	comf	ltoa@val+1,f
  2317  0746  09BB               	comf	ltoa@val+2,f
  2318  0747  09BC               	comf	ltoa@val+3,f
  2319  0748  0AB9               	incf	ltoa@val,f
  2320  0749  1903               	skipnz
  2321  074A  0ABA               	incf	ltoa@val+1,f
  2322  074B  1903               	skipnz
  2323  074C  0ABB               	incf	ltoa@val+2,f
  2324  074D  1903               	skipnz
  2325  074E  0ABC               	incf	ltoa@val+3,f
  2326  074F                     l2215:
  2327  074F  083C               	movf	ltoa@val+3,w
  2328  0750  00B0               	movwf	ultoa@val+3
  2329  0751  083B               	movf	ltoa@val+2,w
  2330  0752  00AF               	movwf	ultoa@val+2
  2331  0753  083A               	movf	ltoa@val+1,w
  2332  0754  00AE               	movwf	ultoa@val+1
  2333  0755  0839               	movf	ltoa@val,w
  2334  0756  00AD               	movwf	ultoa@val
  2335  0757  083E               	movf	ltoa@base+1,w
  2336  0758  00B2               	movwf	ultoa@base+1
  2337  0759  083D               	movf	ltoa@base,w
  2338  075A  00B1               	movwf	ultoa@base
  2339  075B  0877               	movf	ltoa@buf,w
  2340  075C  229F               	fcall	_ultoa
  2341  075D                     l825:
  2342  075D  0008               	return
  2343  075E                     __end_of_ltoa:
  2344                           
  2345                           	psect	text8
  2346  029F                     __ptext8:	
  2347 ;; *************** function _ultoa *****************
  2348 ;; Defined at:
  2349 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ltoa.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  buf             1    wreg     PTR unsigned char 
  2352 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  2353 ;;  val             4   13[BANK0 ] unsigned long 
  2354 ;;  base            2   17[BANK0 ] int 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  buf             1   24[BANK0 ] PTR unsigned char 
  2357 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  2358 ;;  v               4   19[BANK0 ] unsigned long 
  2359 ;;  c               1   23[BANK0 ] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      PTR unsigned char 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1
  2369 ;;      Params:         0       6       0
  2370 ;;      Locals:         0       6       0
  2371 ;;      Temps:          1       0       0
  2372 ;;      Totals:         1      12       0
  2373 ;;Total ram usage:       13 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 2
  2376 ;; This function calls:
  2377 ;;		___lldiv
  2378 ;;		___llmod
  2379 ;; This function is called by:
  2380 ;;		_ltoa
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384  029F                     _ultoa:	
  2385                           ;psect for function _ultoa
  2386                           
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _ultoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2390                           ;ultoa@buf stored from wreg
  2391  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2392  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2393  02A1  00B8               	movwf	ultoa@buf
  2394  02A2                     l2163:
  2395  02A2  0830               	movf	ultoa@val+3,w
  2396  02A3  00B6               	movwf	ultoa@v+3
  2397  02A4  082F               	movf	ultoa@val+2,w
  2398  02A5  00B5               	movwf	ultoa@v+2
  2399  02A6  082E               	movf	ultoa@val+1,w
  2400  02A7  00B4               	movwf	ultoa@v+1
  2401  02A8  082D               	movf	ultoa@val,w
  2402  02A9  00B3               	movwf	ultoa@v
  2403  02AA                     l2165:
  2404  02AA  0831               	movf	ultoa@base,w
  2405  02AB  00A0               	movwf	___lldiv@divisor
  2406  02AC  0832               	movf	ultoa@base+1,w
  2407  02AD  00A1               	movwf	___lldiv@divisor+1
  2408  02AE  3000               	movlw	0
  2409  02AF  1BA1               	btfsc	___lldiv@divisor+1,7
  2410  02B0  30FF               	movlw	255
  2411  02B1  00A2               	movwf	___lldiv@divisor+2
  2412  02B2  00A3               	movwf	___lldiv@divisor+3
  2413  02B3  0836               	movf	ultoa@v+3,w
  2414  02B4  00A7               	movwf	___lldiv@dividend+3
  2415  02B5  0835               	movf	ultoa@v+2,w
  2416  02B6  00A6               	movwf	___lldiv@dividend+2
  2417  02B7  0834               	movf	ultoa@v+1,w
  2418  02B8  00A5               	movwf	___lldiv@dividend+1
  2419  02B9  0833               	movf	ultoa@v,w
  2420  02BA  00A4               	movwf	___lldiv@dividend
  2421  02BB  2575               	fcall	___lldiv
  2422  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2423  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2424  02BE  0823               	movf	?___lldiv+3,w
  2425  02BF  00B6               	movwf	ultoa@v+3
  2426  02C0  0822               	movf	?___lldiv+2,w
  2427  02C1  00B5               	movwf	ultoa@v+2
  2428  02C2  0821               	movf	?___lldiv+1,w
  2429  02C3  00B4               	movwf	ultoa@v+1
  2430  02C4  0820               	movf	?___lldiv,w
  2431  02C5  00B3               	movwf	ultoa@v
  2432  02C6                     l2167:
  2433  02C6  3001               	movlw	1
  2434  02C7  00F5               	movwf	??_ultoa
  2435  02C8  0875               	movf	??_ultoa,w
  2436  02C9  07B8               	addwf	ultoa@buf,f
  2437  02CA                     l2169:
  2438  02CA  0836               	movf	ultoa@v+3,w
  2439  02CB  0435               	iorwf	ultoa@v+2,w
  2440  02CC  0434               	iorwf	ultoa@v+1,w
  2441  02CD  0433               	iorwf	ultoa@v,w
  2442  02CE  1D03               	skipz
  2443  02CF  2AD1               	goto	u1841
  2444  02D0  2AD2               	goto	u1840
  2445  02D1                     u1841:
  2446  02D1  2AAA               	goto	l2165
  2447  02D2                     u1840:
  2448  02D2                     l2171:
  2449  02D2  0838               	movf	ultoa@buf,w
  2450  02D3  0084               	movwf	4
  2451  02D4  1383               	bcf	3,7	;select IRP bank0
  2452  02D5  0180               	clrf	0
  2453  02D6                     l2173:
  2454  02D6  3001               	movlw	1
  2455  02D7  02B8               	subwf	ultoa@buf,f
  2456  02D8                     l2175:
  2457  02D8  0831               	movf	ultoa@base,w
  2458  02D9  00A0               	movwf	___llmod@divisor
  2459  02DA  0832               	movf	ultoa@base+1,w
  2460  02DB  00A1               	movwf	___llmod@divisor+1
  2461  02DC  3000               	movlw	0
  2462  02DD  1BA1               	btfsc	___llmod@divisor+1,7
  2463  02DE  30FF               	movlw	255
  2464  02DF  00A2               	movwf	___llmod@divisor+2
  2465  02E0  00A3               	movwf	___llmod@divisor+3
  2466  02E1  0830               	movf	ultoa@val+3,w
  2467  02E2  00A7               	movwf	___llmod@dividend+3
  2468  02E3  082F               	movf	ultoa@val+2,w
  2469  02E4  00A6               	movwf	___llmod@dividend+2
  2470  02E5  082E               	movf	ultoa@val+1,w
  2471  02E6  00A5               	movwf	___llmod@dividend+1
  2472  02E7  082D               	movf	ultoa@val,w
  2473  02E8  00A4               	movwf	___llmod@dividend
  2474  02E9  25DD               	fcall	___llmod
  2475  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2476  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2477  02EC  0820               	movf	?___llmod,w
  2478  02ED  00F5               	movwf	??_ultoa
  2479  02EE  0875               	movf	??_ultoa,w
  2480  02EF  00B7               	movwf	ultoa@c
  2481  02F0                     l2177:
  2482  02F0  0831               	movf	ultoa@base,w
  2483  02F1  00A0               	movwf	___lldiv@divisor
  2484  02F2  0832               	movf	ultoa@base+1,w
  2485  02F3  00A1               	movwf	___lldiv@divisor+1
  2486  02F4  3000               	movlw	0
  2487  02F5  1BA1               	btfsc	___lldiv@divisor+1,7
  2488  02F6  30FF               	movlw	255
  2489  02F7  00A2               	movwf	___lldiv@divisor+2
  2490  02F8  00A3               	movwf	___lldiv@divisor+3
  2491  02F9  0830               	movf	ultoa@val+3,w
  2492  02FA  00A7               	movwf	___lldiv@dividend+3
  2493  02FB  082F               	movf	ultoa@val+2,w
  2494  02FC  00A6               	movwf	___lldiv@dividend+2
  2495  02FD  082E               	movf	ultoa@val+1,w
  2496  02FE  00A5               	movwf	___lldiv@dividend+1
  2497  02FF  082D               	movf	ultoa@val,w
  2498  0300  00A4               	movwf	___lldiv@dividend
  2499  0301  2575               	fcall	___lldiv
  2500  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0304  0823               	movf	?___lldiv+3,w
  2503  0305  00B0               	movwf	ultoa@val+3
  2504  0306  0822               	movf	?___lldiv+2,w
  2505  0307  00AF               	movwf	ultoa@val+2
  2506  0308  0821               	movf	?___lldiv+1,w
  2507  0309  00AE               	movwf	ultoa@val+1
  2508  030A  0820               	movf	?___lldiv,w
  2509  030B  00AD               	movwf	ultoa@val
  2510  030C                     l2179:
  2511  030C  300A               	movlw	10
  2512  030D  0237               	subwf	ultoa@c,w
  2513  030E  1C03               	skipc
  2514  030F  2B11               	goto	u1851
  2515  0310  2B12               	goto	u1850
  2516  0311                     u1851:
  2517  0311  2B16               	goto	l831
  2518  0312                     u1850:
  2519  0312                     l2181:
  2520  0312  3007               	movlw	7
  2521  0313  00F5               	movwf	??_ultoa
  2522  0314  0875               	movf	??_ultoa,w
  2523  0315  07B7               	addwf	ultoa@c,f
  2524  0316                     l831:
  2525  0316  3030               	movlw	48
  2526  0317  00F5               	movwf	??_ultoa
  2527  0318  0875               	movf	??_ultoa,w
  2528  0319  07B7               	addwf	ultoa@c,f
  2529  031A                     l2183:
  2530  031A  0837               	movf	ultoa@c,w
  2531  031B  00F5               	movwf	??_ultoa
  2532  031C  0838               	movf	ultoa@buf,w
  2533  031D  0084               	movwf	4
  2534  031E  0875               	movf	??_ultoa,w
  2535  031F  1383               	bcf	3,7	;select IRP bank0
  2536  0320  0080               	movwf	0
  2537  0321                     l2185:
  2538  0321  3001               	movlw	1
  2539  0322  02B8               	subwf	ultoa@buf,f
  2540  0323                     l2187:
  2541  0323  0830               	movf	ultoa@val+3,w
  2542  0324  042F               	iorwf	ultoa@val+2,w
  2543  0325  042E               	iorwf	ultoa@val+1,w
  2544  0326  042D               	iorwf	ultoa@val,w
  2545  0327  1D03               	skipz
  2546  0328  2B2A               	goto	u1861
  2547  0329  2B2B               	goto	u1860
  2548  032A                     u1861:
  2549  032A  2AD8               	goto	l2175
  2550  032B                     u1860:
  2551  032B                     l833:
  2552  032B  0008               	return
  2553  032C                     __end_of_ultoa:
  2554                           
  2555                           	psect	text9
  2556  05DD                     __ptext9:	
  2557 ;; *************** function ___llmod *****************
  2558 ;; Defined at:
  2559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  divisor         4    0[BANK0 ] unsigned long 
  2562 ;;  dividend        4    4[BANK0 ] unsigned long 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  counter         1    4[COMMON] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  4    0[BANK0 ] unsigned long 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1
  2574 ;;      Params:         0       8       0
  2575 ;;      Locals:         1       0       0
  2576 ;;      Temps:          1       0       0
  2577 ;;      Totals:         2       8       0
  2578 ;;Total ram usage:       10 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_ultoa
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588  05DD                     ___llmod:	
  2589                           ;psect for function ___llmod
  2590                           
  2591  05DD                     l2133:	
  2592                           ;incstack = 0
  2593                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2594                           
  2595  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2596  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2597  05DF  0823               	movf	___llmod@divisor+3,w
  2598  05E0  0422               	iorwf	___llmod@divisor+2,w
  2599  05E1  0421               	iorwf	___llmod@divisor+1,w
  2600  05E2  0420               	iorwf	___llmod@divisor,w
  2601  05E3  1903               	skipnz
  2602  05E4  2DE6               	goto	u1771
  2603  05E5  2DE7               	goto	u1770
  2604  05E6                     u1771:
  2605  05E6  2E2A               	goto	l2149
  2606  05E7                     u1770:
  2607  05E7                     l2135:
  2608  05E7  01F4               	clrf	___llmod@counter
  2609  05E8  0AF4               	incf	___llmod@counter,f
  2610  05E9  2DF7               	goto	l2139
  2611  05EA                     l2137:
  2612  05EA  3001               	movlw	1
  2613  05EB  00F3               	movwf	??___llmod
  2614  05EC                     u1785:
  2615  05EC  1003               	clrc
  2616  05ED  0DA0               	rlf	___llmod@divisor,f
  2617  05EE  0DA1               	rlf	___llmod@divisor+1,f
  2618  05EF  0DA2               	rlf	___llmod@divisor+2,f
  2619  05F0  0DA3               	rlf	___llmod@divisor+3,f
  2620  05F1  0BF3               	decfsz	??___llmod,f
  2621  05F2  2DEC               	goto	u1785
  2622  05F3  3001               	movlw	1
  2623  05F4  00F3               	movwf	??___llmod
  2624  05F5  0873               	movf	??___llmod,w
  2625  05F6  07F4               	addwf	___llmod@counter,f
  2626  05F7                     l2139:
  2627  05F7  1FA3               	btfss	___llmod@divisor+3,7
  2628  05F8  2DFA               	goto	u1791
  2629  05F9  2DFB               	goto	u1790
  2630  05FA                     u1791:
  2631  05FA  2DEA               	goto	l2137
  2632  05FB                     u1790:
  2633  05FB                     l2141:
  2634  05FB  0823               	movf	___llmod@divisor+3,w
  2635  05FC  0227               	subwf	___llmod@dividend+3,w
  2636  05FD  1D03               	skipz
  2637  05FE  2E09               	goto	u1805
  2638  05FF  0822               	movf	___llmod@divisor+2,w
  2639  0600  0226               	subwf	___llmod@dividend+2,w
  2640  0601  1D03               	skipz
  2641  0602  2E09               	goto	u1805
  2642  0603  0821               	movf	___llmod@divisor+1,w
  2643  0604  0225               	subwf	___llmod@dividend+1,w
  2644  0605  1D03               	skipz
  2645  0606  2E09               	goto	u1805
  2646  0607  0820               	movf	___llmod@divisor,w
  2647  0608  0224               	subwf	___llmod@dividend,w
  2648  0609                     u1805:
  2649  0609  1C03               	skipc
  2650  060A  2E0C               	goto	u1801
  2651  060B  2E0D               	goto	u1800
  2652  060C                     u1801:
  2653  060C  2E1B               	goto	l2145
  2654  060D                     u1800:
  2655  060D                     l2143:
  2656  060D  0820               	movf	___llmod@divisor,w
  2657  060E  02A4               	subwf	___llmod@dividend,f
  2658  060F  0821               	movf	___llmod@divisor+1,w
  2659  0610  1C03               	skipc
  2660  0611  0F21               	incfsz	___llmod@divisor+1,w
  2661  0612  02A5               	subwf	___llmod@dividend+1,f
  2662  0613  0822               	movf	___llmod@divisor+2,w
  2663  0614  1C03               	skipc
  2664  0615  0F22               	incfsz	___llmod@divisor+2,w
  2665  0616  02A6               	subwf	___llmod@dividend+2,f
  2666  0617  0823               	movf	___llmod@divisor+3,w
  2667  0618  1C03               	skipc
  2668  0619  0F23               	incfsz	___llmod@divisor+3,w
  2669  061A  02A7               	subwf	___llmod@dividend+3,f
  2670  061B                     l2145:
  2671  061B  3001               	movlw	1
  2672  061C                     u1815:
  2673  061C  1003               	clrc
  2674  061D  0CA3               	rrf	___llmod@divisor+3,f
  2675  061E  0CA2               	rrf	___llmod@divisor+2,f
  2676  061F  0CA1               	rrf	___llmod@divisor+1,f
  2677  0620  0CA0               	rrf	___llmod@divisor,f
  2678  0621  3EFF               	addlw	-1
  2679  0622  1D03               	skipz
  2680  0623  2E1C               	goto	u1815
  2681  0624                     l2147:
  2682  0624  3001               	movlw	1
  2683  0625  02F4               	subwf	___llmod@counter,f
  2684  0626  1D03               	btfss	3,2
  2685  0627  2E29               	goto	u1821
  2686  0628  2E2A               	goto	u1820
  2687  0629                     u1821:
  2688  0629  2DFB               	goto	l2141
  2689  062A                     u1820:
  2690  062A                     l2149:
  2691  062A  0827               	movf	___llmod@dividend+3,w
  2692  062B  00A3               	movwf	?___llmod+3
  2693  062C  0826               	movf	___llmod@dividend+2,w
  2694  062D  00A2               	movwf	?___llmod+2
  2695  062E  0825               	movf	___llmod@dividend+1,w
  2696  062F  00A1               	movwf	?___llmod+1
  2697  0630  0824               	movf	___llmod@dividend,w
  2698  0631  00A0               	movwf	?___llmod
  2699  0632                     l593:
  2700  0632  0008               	return
  2701  0633                     __end_of___llmod:
  2702                           
  2703                           	psect	text10
  2704  0575                     __ptext10:	
  2705 ;; *************** function ___lldiv *****************
  2706 ;; Defined at:
  2707 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  divisor         4    0[BANK0 ] unsigned long 
  2710 ;;  dividend        4    4[BANK0 ] unsigned long 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  quotient        4    8[BANK0 ] unsigned long 
  2713 ;;  counter         1   12[BANK0 ] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  4    0[BANK0 ] unsigned long 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1
  2723 ;;      Params:         0       8       0
  2724 ;;      Locals:         0       5       0
  2725 ;;      Temps:          1       0       0
  2726 ;;      Totals:         1      13       0
  2727 ;;Total ram usage:       14 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_ultoa
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737  0575                     ___lldiv:	
  2738                           ;psect for function ___lldiv
  2739                           
  2740  0575                     l2109:	
  2741                           ;incstack = 0
  2742                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2743                           
  2744  0575  3000               	movlw	0
  2745  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0578  00AB               	movwf	___lldiv@quotient+3
  2748  0579  3000               	movlw	0
  2749  057A  00AA               	movwf	___lldiv@quotient+2
  2750  057B  3000               	movlw	0
  2751  057C  00A9               	movwf	___lldiv@quotient+1
  2752  057D  3000               	movlw	0
  2753  057E  00A8               	movwf	___lldiv@quotient
  2754  057F  0823               	movf	___lldiv@divisor+3,w
  2755  0580  0422               	iorwf	___lldiv@divisor+2,w
  2756  0581  0421               	iorwf	___lldiv@divisor+1,w
  2757  0582  0420               	iorwf	___lldiv@divisor,w
  2758  0583  1903               	skipnz
  2759  0584  2D86               	goto	u1701
  2760  0585  2D87               	goto	u1700
  2761  0586                     u1701:
  2762  0586  2DD4               	goto	l2129
  2763  0587                     u1700:
  2764  0587                     l2111:
  2765  0587  01AC               	clrf	___lldiv@counter
  2766  0588  0AAC               	incf	___lldiv@counter,f
  2767  0589  2D97               	goto	l2115
  2768  058A                     l2113:
  2769  058A  3001               	movlw	1
  2770  058B  00F3               	movwf	??___lldiv
  2771  058C                     u1715:
  2772  058C  1003               	clrc
  2773  058D  0DA0               	rlf	___lldiv@divisor,f
  2774  058E  0DA1               	rlf	___lldiv@divisor+1,f
  2775  058F  0DA2               	rlf	___lldiv@divisor+2,f
  2776  0590  0DA3               	rlf	___lldiv@divisor+3,f
  2777  0591  0BF3               	decfsz	??___lldiv,f
  2778  0592  2D8C               	goto	u1715
  2779  0593  3001               	movlw	1
  2780  0594  00F3               	movwf	??___lldiv
  2781  0595  0873               	movf	??___lldiv,w
  2782  0596  07AC               	addwf	___lldiv@counter,f
  2783  0597                     l2115:
  2784  0597  1FA3               	btfss	___lldiv@divisor+3,7
  2785  0598  2D9A               	goto	u1721
  2786  0599  2D9B               	goto	u1720
  2787  059A                     u1721:
  2788  059A  2D8A               	goto	l2113
  2789  059B                     u1720:
  2790  059B                     l2117:
  2791  059B  3001               	movlw	1
  2792  059C  00F3               	movwf	??___lldiv
  2793  059D                     u1735:
  2794  059D  1003               	clrc
  2795  059E  0DA8               	rlf	___lldiv@quotient,f
  2796  059F  0DA9               	rlf	___lldiv@quotient+1,f
  2797  05A0  0DAA               	rlf	___lldiv@quotient+2,f
  2798  05A1  0DAB               	rlf	___lldiv@quotient+3,f
  2799  05A2  0BF3               	decfsz	??___lldiv,f
  2800  05A3  2D9D               	goto	u1735
  2801  05A4                     l2119:
  2802  05A4  0823               	movf	___lldiv@divisor+3,w
  2803  05A5  0227               	subwf	___lldiv@dividend+3,w
  2804  05A6  1D03               	skipz
  2805  05A7  2DB2               	goto	u1745
  2806  05A8  0822               	movf	___lldiv@divisor+2,w
  2807  05A9  0226               	subwf	___lldiv@dividend+2,w
  2808  05AA  1D03               	skipz
  2809  05AB  2DB2               	goto	u1745
  2810  05AC  0821               	movf	___lldiv@divisor+1,w
  2811  05AD  0225               	subwf	___lldiv@dividend+1,w
  2812  05AE  1D03               	skipz
  2813  05AF  2DB2               	goto	u1745
  2814  05B0  0820               	movf	___lldiv@divisor,w
  2815  05B1  0224               	subwf	___lldiv@dividend,w
  2816  05B2                     u1745:
  2817  05B2  1C03               	skipc
  2818  05B3  2DB5               	goto	u1741
  2819  05B4  2DB6               	goto	u1740
  2820  05B5                     u1741:
  2821  05B5  2DC5               	goto	l2125
  2822  05B6                     u1740:
  2823  05B6                     l2121:
  2824  05B6  0820               	movf	___lldiv@divisor,w
  2825  05B7  02A4               	subwf	___lldiv@dividend,f
  2826  05B8  0821               	movf	___lldiv@divisor+1,w
  2827  05B9  1C03               	skipc
  2828  05BA  0F21               	incfsz	___lldiv@divisor+1,w
  2829  05BB  02A5               	subwf	___lldiv@dividend+1,f
  2830  05BC  0822               	movf	___lldiv@divisor+2,w
  2831  05BD  1C03               	skipc
  2832  05BE  0F22               	incfsz	___lldiv@divisor+2,w
  2833  05BF  02A6               	subwf	___lldiv@dividend+2,f
  2834  05C0  0823               	movf	___lldiv@divisor+3,w
  2835  05C1  1C03               	skipc
  2836  05C2  0F23               	incfsz	___lldiv@divisor+3,w
  2837  05C3  02A7               	subwf	___lldiv@dividend+3,f
  2838  05C4                     l2123:
  2839  05C4  1428               	bsf	___lldiv@quotient,0
  2840  05C5                     l2125:
  2841  05C5  3001               	movlw	1
  2842  05C6                     u1755:
  2843  05C6  1003               	clrc
  2844  05C7  0CA3               	rrf	___lldiv@divisor+3,f
  2845  05C8  0CA2               	rrf	___lldiv@divisor+2,f
  2846  05C9  0CA1               	rrf	___lldiv@divisor+1,f
  2847  05CA  0CA0               	rrf	___lldiv@divisor,f
  2848  05CB  3EFF               	addlw	-1
  2849  05CC  1D03               	skipz
  2850  05CD  2DC6               	goto	u1755
  2851  05CE                     l2127:
  2852  05CE  3001               	movlw	1
  2853  05CF  02AC               	subwf	___lldiv@counter,f
  2854  05D0  1D03               	btfss	3,2
  2855  05D1  2DD3               	goto	u1761
  2856  05D2  2DD4               	goto	u1760
  2857  05D3                     u1761:
  2858  05D3  2D9B               	goto	l2117
  2859  05D4                     u1760:
  2860  05D4                     l2129:
  2861  05D4  082B               	movf	___lldiv@quotient+3,w
  2862  05D5  00A3               	movwf	?___lldiv+3
  2863  05D6  082A               	movf	___lldiv@quotient+2,w
  2864  05D7  00A2               	movwf	?___lldiv+2
  2865  05D8  0829               	movf	___lldiv@quotient+1,w
  2866  05D9  00A1               	movwf	?___lldiv+1
  2867  05DA  0828               	movf	___lldiv@quotient,w
  2868  05DB  00A0               	movwf	?___lldiv
  2869  05DC                     l407:
  2870  05DC  0008               	return
  2871  05DD                     __end_of___lldiv:
  2872                           
  2873                           	psect	text11
  2874  075E                     __ptext11:	
  2875 ;; *************** function _LCD_puts *****************
  2876 ;; Defined at:
  2877 ;;		line 153 in file "LCDdrive882.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  s               1    wreg     PTR unsigned char 
  2880 ;;		 -> LCD_display_float@output(7), LCD_display_value@buffer(12), 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  s               1    9[BANK0 ] PTR unsigned char 
  2883 ;;		 -> LCD_display_float@output(7), LCD_display_value@buffer(12), 
  2884 ;;  c               1   11[BANK0 ] unsigned char 
  2885 ;;  i               1   10[BANK0 ] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1
  2895 ;;      Params:         0       0       0
  2896 ;;      Locals:         0       3       0
  2897 ;;      Temps:          0       2       0
  2898 ;;      Totals:         0       5       0
  2899 ;;Total ram usage:        5 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 3
  2902 ;; This function calls:
  2903 ;;		_LCD_putch
  2904 ;; This function is called by:
  2905 ;;		_LCD_display_value
  2906 ;;		_LCD_display_float
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910  075E                     _LCD_puts:	
  2911                           ;psect for function _LCD_puts
  2912                           
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2916                           ;LCD_puts@s stored from wreg
  2917  075E  1283               	bcf	3,5	;RP0=0, select bank0
  2918  075F  1303               	bcf	3,6	;RP1=0, select bank0
  2919  0760  00A9               	movwf	LCD_puts@s
  2920  0761                     l2189:
  2921                           
  2922                           ;LCDdrive882.c: 153: void LCD_puts(unsigned char *s);LCDdrive882.c: 154: {;LCDdrive882.c
      +                          : 155:         unsigned char c = 255;
  2923  0761  30FF               	movlw	255
  2924  0762  00A7               	movwf	??_LCD_puts
  2925  0763  0827               	movf	??_LCD_puts,w
  2926  0764  00AB               	movwf	LCD_puts@c
  2927  0765                     l2191:
  2928                           
  2929                           ;LCDdrive882.c: 156:         unsigned char i = 0;
  2930  0765  01AA               	clrf	LCD_puts@i
  2931                           
  2932                           ;LCDdrive882.c: 157:         while ((c > 0) && (i < 16))
  2933  0766  2F7E               	goto	l2201
  2934  0767                     l2193:
  2935                           
  2936                           ;LCDdrive882.c: 158:         {;LCDdrive882.c: 159:           c = s[i];
  2937  0767  082A               	movf	LCD_puts@i,w
  2938  0768  0729               	addwf	LCD_puts@s,w
  2939  0769  00A7               	movwf	??_LCD_puts
  2940  076A  0827               	movf	??_LCD_puts,w
  2941  076B  0084               	movwf	4
  2942  076C  1383               	bcf	3,7	;select IRP bank0
  2943  076D  0800               	movf	0,w
  2944  076E  00A8               	movwf	??_LCD_puts+1
  2945  076F  0828               	movf	??_LCD_puts+1,w
  2946  0770  00AB               	movwf	LCD_puts@c
  2947  0771                     l2195:
  2948                           
  2949                           ;LCDdrive882.c: 160:           if (c != 0) LCD_putch(c);
  2950  0771  082B               	movf	LCD_puts@c,w
  2951  0772  1903               	btfsc	3,2
  2952  0773  2F75               	goto	u1871
  2953  0774  2F76               	goto	u1870
  2954  0775                     u1871:
  2955  0775  2F78               	goto	l2199
  2956  0776                     u1870:
  2957  0776                     l2197:
  2958  0776  082B               	movf	LCD_puts@c,w
  2959  0777  2070               	fcall	_LCD_putch
  2960  0778                     l2199:
  2961                           
  2962                           ;LCDdrive882.c: 161:           i++;
  2963  0778  3001               	movlw	1
  2964  0779  1283               	bcf	3,5	;RP0=0, select bank0
  2965  077A  1303               	bcf	3,6	;RP1=0, select bank0
  2966  077B  00A7               	movwf	??_LCD_puts
  2967  077C  0827               	movf	??_LCD_puts,w
  2968  077D  07AA               	addwf	LCD_puts@i,f
  2969  077E                     l2201:
  2970                           
  2971                           ;LCDdrive882.c: 157:         while ((c > 0) && (i < 16))
  2972  077E  082B               	movf	LCD_puts@c,w
  2973  077F  1903               	btfsc	3,2
  2974  0780  2F82               	goto	u1881
  2975  0781  2F83               	goto	u1880
  2976  0782                     u1881:
  2977  0782  2F89               	goto	l220
  2978  0783                     u1880:
  2979  0783                     l2203:
  2980  0783  3010               	movlw	16
  2981  0784  022A               	subwf	LCD_puts@i,w
  2982  0785  1C03               	skipc
  2983  0786  2F88               	goto	u1891
  2984  0787  2F89               	goto	u1890
  2985  0788                     u1891:
  2986  0788  2F67               	goto	l2193
  2987  0789                     u1890:
  2988  0789                     l220:
  2989  0789  0008               	return
  2990  078A                     __end_of_LCD_puts:
  2991                           
  2992                           	psect	text12
  2993  0070                     __ptext12:	
  2994 ;; *************** function _LCD_putch *****************
  2995 ;; Defined at:
  2996 ;;		line 135 in file "LCDdrive882.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  c               1    wreg     unsigned char 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  c               1    5[COMMON] unsigned char 
  3001 ;;  counter         2    6[COMMON] unsigned int 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1
  3011 ;;      Params:         0       0       0
  3012 ;;      Locals:         3       0       0
  3013 ;;      Temps:          0       0       0
  3014 ;;      Totals:         3       0       0
  3015 ;;Total ram usage:        3 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 2
  3018 ;; This function calls:
  3019 ;;		_LCD_write
  3020 ;; This function is called by:
  3021 ;;		_LCD_puts
  3022 ;;		_LCD_putsc
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026  0070                     _LCD_putch:	
  3027                           ;psect for function _LCD_putch
  3028                           
  3029                           
  3030                           ;incstack = 0
  3031                           ; Regs used in _LCD_putch: [wreg+status,2+status,0+pclath+cstack]
  3032                           ;LCD_putch@c stored from wreg
  3033  0070  00F5               	movwf	LCD_putch@c
  3034  0071                     l2153:
  3035                           
  3036                           ;LCDdrive882.c: 135: void LCD_putch(unsigned char c);LCDdrive882.c: 136: {;LCDdrive882.c
      +                          : 137:         unsigned int counter;;LCDdrive882.c: 138:         LCD_write(c, 1);
  3037  0071  01F3               	clrf	LCD_write@rs
  3038  0072  0AF3               	incf	LCD_write@rs,f
  3039  0073  0875               	movf	LCD_putch@c,w
  3040  0074  232C               	fcall	_LCD_write
  3041  0075                     l2155:
  3042                           
  3043                           ;LCDdrive882.c: 139:         for (counter = 0; counter < 250; counter++);
  3044  0075  01F6               	clrf	LCD_putch@counter
  3045  0076  01F7               	clrf	LCD_putch@counter+1
  3046  0077                     l2161:
  3047  0077  3001               	movlw	1
  3048  0078  07F6               	addwf	LCD_putch@counter,f
  3049  0079  1803               	skipnc
  3050  007A  0AF7               	incf	LCD_putch@counter+1,f
  3051  007B  3000               	movlw	0
  3052  007C  07F7               	addwf	LCD_putch@counter+1,f
  3053  007D  3000               	movlw	0
  3054  007E  0277               	subwf	LCD_putch@counter+1,w
  3055  007F  30FA               	movlw	250
  3056  0080  1903               	skipnz
  3057  0081  0276               	subwf	LCD_putch@counter,w
  3058  0082  1C03               	skipc
  3059  0083  2885               	goto	u1831
  3060  0084  2886               	goto	u1830
  3061  0085                     u1831:
  3062  0085  2877               	goto	l2161
  3063  0086                     u1830:
  3064  0086                     l204:
  3065  0086  0008               	return
  3066  0087                     __end_of_LCD_putch:
  3067                           
  3068                           	psect	text13
  3069  009C                     __ptext13:	
  3070 ;; *************** function _LCD_cursor *****************
  3071 ;; Defined at:
  3072 ;;		line 178 in file "LCDdrive882.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  x               1    wreg     unsigned char 
  3075 ;;  y               1    5[COMMON] unsigned char 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  x               1    7[COMMON] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0, pclath, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1
  3087 ;;      Params:         1       0       0
  3088 ;;      Locals:         1       0       0
  3089 ;;      Temps:          1       0       0
  3090 ;;      Totals:         3       0       0
  3091 ;;Total ram usage:        3 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 2
  3094 ;; This function calls:
  3095 ;;		_LCD_write
  3096 ;; This function is called by:
  3097 ;;		_tempDisplay
  3098 ;;		_displayHighLow
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102  009C                     _LCD_cursor:	
  3103                           ;psect for function _LCD_cursor
  3104                           
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _LCD_cursor: [wreg+status,2+status,0+pclath+cstack]
  3108                           ;LCD_cursor@x stored from wreg
  3109  009C  00F7               	movwf	LCD_cursor@x
  3110  009D                     l2219:
  3111                           
  3112                           ;LCDdrive882.c: 178: void LCD_cursor (unsigned char x, unsigned char y );LCDdrive882.c: 
      +                          179: {;LCDdrive882.c: 180:     if ( y==0 )
  3113  009D  0875               	movf	LCD_cursor@y,w
  3114  009E  1D03               	btfss	3,2
  3115  009F  28A1               	goto	u1911
  3116  00A0  28A2               	goto	u1910
  3117  00A1                     u1911:
  3118  00A1  28A7               	goto	l2223
  3119  00A2                     u1910:
  3120  00A2                     l2221:
  3121                           
  3122                           ;LCDdrive882.c: 181:     {;LCDdrive882.c: 183:         y=0x80 ;
  3123  00A2  3080               	movlw	128
  3124  00A3  00F6               	movwf	??_LCD_cursor
  3125  00A4  0876               	movf	??_LCD_cursor,w
  3126  00A5  00F5               	movwf	LCD_cursor@y
  3127                           
  3128                           ;LCDdrive882.c: 184:     }
  3129  00A6  28AB               	goto	l2225
  3130  00A7                     l2223:
  3131                           
  3132                           ;LCDdrive882.c: 186:     {;LCDdrive882.c: 188:         y=0xc0 ;
  3133  00A7  30C0               	movlw	192
  3134  00A8  00F6               	movwf	??_LCD_cursor
  3135  00A9  0876               	movf	??_LCD_cursor,w
  3136  00AA  00F5               	movwf	LCD_cursor@y
  3137  00AB                     l2225:
  3138                           
  3139                           ;LCDdrive882.c: 191:     LCD_write( y+x, 0) ;
  3140  00AB  01F3               	clrf	LCD_write@rs
  3141  00AC  0877               	movf	LCD_cursor@x,w
  3142  00AD  0775               	addwf	LCD_cursor@y,w
  3143  00AE  232C               	fcall	_LCD_write
  3144  00AF                     l234:
  3145  00AF  0008               	return
  3146  00B0                     __end_of_LCD_cursor:
  3147                           
  3148                           	psect	text14
  3149  004B                     __ptext14:	
  3150 ;; *************** function _convertToF *****************
  3151 ;; Defined at:
  3152 ;;		line 121 in file "Assignment4U2061093.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  t               2   10[BANK0 ] short 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  converted       2   12[BANK0 ] short 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2   10[BANK0 ] short 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1
  3166 ;;      Params:         0       2       0
  3167 ;;      Locals:         0       2       0
  3168 ;;      Temps:          0       0       0
  3169 ;;      Totals:         0       4       0
  3170 ;;Total ram usage:        4 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 2
  3173 ;; This function calls:
  3174 ;;		___awdiv
  3175 ;;		___wmul
  3176 ;; This function is called by:
  3177 ;;		_tempDisplay
  3178 ;;		_HighLow
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182  004B                     _convertToF:	
  3183                           ;psect for function _convertToF
  3184                           
  3185  004B                     l2275:	
  3186                           ;incstack = 0
  3187                           ; Regs used in _convertToF: [wreg+status,2+status,0+pclath+cstack]
  3188                           
  3189                           
  3190                           ;Assignment4U2061093.c: 122:     short converted;;Assignment4U2061093.c: 123:     conver
      +                          ted = ((t*18)/10)+32;
  3191  004B  300A               	movlw	10
  3192  004C  1283               	bcf	3,5	;RP0=0, select bank0
  3193  004D  1303               	bcf	3,6	;RP1=0, select bank0
  3194  004E  00A2               	movwf	___awdiv@divisor
  3195  004F  3000               	movlw	0
  3196  0050  00A3               	movwf	___awdiv@divisor+1
  3197  0051  082B               	movf	convertToF@t+1,w
  3198  0052  00F4               	movwf	___wmul@multiplier+1
  3199  0053  082A               	movf	convertToF@t,w
  3200  0054  00F3               	movwf	___wmul@multiplier
  3201  0055  3012               	movlw	18
  3202  0056  00F5               	movwf	___wmul@multiplicand
  3203  0057  3000               	movlw	0
  3204  0058  00F6               	movwf	___wmul@multiplicand+1
  3205  0059  278A               	fcall	___wmul
  3206  005A  0874               	movf	?___wmul+1,w
  3207  005B  1283               	bcf	3,5	;RP0=0, select bank0
  3208  005C  1303               	bcf	3,6	;RP1=0, select bank0
  3209  005D  00A5               	movwf	___awdiv@dividend+1
  3210  005E  0873               	movf	?___wmul,w
  3211  005F  00A4               	movwf	___awdiv@dividend
  3212  0060  250C               	fcall	___awdiv
  3213  0061  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0062  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0063  0822               	movf	?___awdiv,w
  3216  0064  3E20               	addlw	32
  3217  0065  00AC               	movwf	convertToF@converted
  3218  0066  0823               	movf	?___awdiv+1,w
  3219  0067  1803               	skipnc
  3220  0068  3E01               	addlw	1
  3221  0069  3E00               	addlw	0
  3222  006A  00AD               	movwf	convertToF@converted+1
  3223  006B                     l2277:
  3224                           
  3225                           ;Assignment4U2061093.c: 124:     return converted;
  3226  006B  082D               	movf	convertToF@converted+1,w
  3227  006C  00AB               	movwf	?_convertToF+1
  3228  006D  082C               	movf	convertToF@converted,w
  3229  006E  00AA               	movwf	?_convertToF
  3230  006F                     l100:
  3231  006F  0008               	return
  3232  0070                     __end_of_convertToF:
  3233                           
  3234                           	psect	text15
  3235  078A                     __ptext15:	
  3236 ;; *************** function ___wmul *****************
  3237 ;; Defined at:
  3238 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  multiplier      2    3[COMMON] unsigned int 
  3241 ;;  multiplicand    2    5[COMMON] unsigned int 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  product         2    0[BANK0 ] unsigned int 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  2    3[COMMON] unsigned int 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMMON   BANK0   BANK1
  3253 ;;      Params:         4       0       0
  3254 ;;      Locals:         0       2       0
  3255 ;;      Temps:          0       0       0
  3256 ;;      Totals:         4       2       0
  3257 ;;Total ram usage:        6 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_convertToF
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267  078A                     ___wmul:	
  3268                           ;psect for function ___wmul
  3269                           
  3270  078A                     l2245:	
  3271                           ;incstack = 0
  3272                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3273                           
  3274  078A  1283               	bcf	3,5	;RP0=0, select bank0
  3275  078B  1303               	bcf	3,6	;RP1=0, select bank0
  3276  078C  01A0               	clrf	___wmul@product
  3277  078D  01A1               	clrf	___wmul@product+1
  3278  078E                     l2247:
  3279  078E  1C73               	btfss	___wmul@multiplier,0
  3280  078F  2F91               	goto	u1951
  3281  0790  2F92               	goto	u1950
  3282  0791                     u1951:
  3283  0791  2F9A               	goto	l371
  3284  0792                     u1950:
  3285  0792                     l2249:
  3286  0792  0875               	movf	___wmul@multiplicand,w
  3287  0793  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0794  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0795  07A0               	addwf	___wmul@product,f
  3290  0796  1803               	skipnc
  3291  0797  0AA1               	incf	___wmul@product+1,f
  3292  0798  0876               	movf	___wmul@multiplicand+1,w
  3293  0799  07A1               	addwf	___wmul@product+1,f
  3294  079A                     l371:
  3295  079A  3001               	movlw	1
  3296  079B                     u1965:
  3297  079B  1003               	clrc
  3298  079C  0DF5               	rlf	___wmul@multiplicand,f
  3299  079D  0DF6               	rlf	___wmul@multiplicand+1,f
  3300  079E  3EFF               	addlw	-1
  3301  079F  1D03               	skipz
  3302  07A0  2F9B               	goto	u1965
  3303  07A1                     l2251:
  3304  07A1  3001               	movlw	1
  3305  07A2                     u1975:
  3306  07A2  1003               	clrc
  3307  07A3  0CF4               	rrf	___wmul@multiplier+1,f
  3308  07A4  0CF3               	rrf	___wmul@multiplier,f
  3309  07A5  3EFF               	addlw	-1
  3310  07A6  1D03               	skipz
  3311  07A7  2FA2               	goto	u1975
  3312  07A8                     l2253:
  3313  07A8  0873               	movf	___wmul@multiplier,w
  3314  07A9  0474               	iorwf	___wmul@multiplier+1,w
  3315  07AA  1D03               	btfss	3,2
  3316  07AB  2FAD               	goto	u1981
  3317  07AC  2FAE               	goto	u1980
  3318  07AD                     u1981:
  3319  07AD  2F8E               	goto	l2247
  3320  07AE                     u1980:
  3321  07AE                     l2255:
  3322  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3323  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3324  07B0  0821               	movf	___wmul@product+1,w
  3325  07B1  00F4               	movwf	?___wmul+1
  3326  07B2  0820               	movf	___wmul@product,w
  3327  07B3  00F3               	movwf	?___wmul
  3328  07B4                     l373:
  3329  07B4  0008               	return
  3330  07B5                     __end_of___wmul:
  3331                           
  3332                           	psect	text16
  3333  050C                     __ptext16:	
  3334 ;; *************** function ___awdiv *****************
  3335 ;; Defined at:
  3336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  divisor         2    2[BANK0 ] int 
  3339 ;;  dividend        2    4[BANK0 ] int 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  quotient        2    8[BANK0 ] int 
  3342 ;;  sign            1    7[BANK0 ] unsigned char 
  3343 ;;  counter         1    6[BANK0 ] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  2    2[BANK0 ] int 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1
  3353 ;;      Params:         0       4       0
  3354 ;;      Locals:         0       4       0
  3355 ;;      Temps:          1       0       0
  3356 ;;      Totals:         1       8       0
  3357 ;;Total ram usage:        9 bytes
  3358 ;; Hardware stack levels used: 1
  3359 ;; Hardware stack levels required when called: 1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_convertToF
  3364 ;;		_ledBarChartC
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368  050C                     ___awdiv:	
  3369                           ;psect for function ___awdiv
  3370                           
  3371  050C                     l1697:	
  3372                           ;incstack = 0
  3373                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3374                           
  3375  050C  1283               	bcf	3,5	;RP0=0, select bank0
  3376  050D  1303               	bcf	3,6	;RP1=0, select bank0
  3377  050E  01A7               	clrf	___awdiv@sign
  3378  050F                     l1699:
  3379  050F  1FA3               	btfss	___awdiv@divisor+1,7
  3380  0510  2D12               	goto	u1181
  3381  0511  2D13               	goto	u1180
  3382  0512                     u1181:
  3383  0512  2D1A               	goto	l1705
  3384  0513                     u1180:
  3385  0513                     l1701:
  3386  0513  09A2               	comf	___awdiv@divisor,f
  3387  0514  09A3               	comf	___awdiv@divisor+1,f
  3388  0515  0AA2               	incf	___awdiv@divisor,f
  3389  0516  1903               	skipnz
  3390  0517  0AA3               	incf	___awdiv@divisor+1,f
  3391  0518                     l1703:
  3392  0518  01A7               	clrf	___awdiv@sign
  3393  0519  0AA7               	incf	___awdiv@sign,f
  3394  051A                     l1705:
  3395  051A  1FA5               	btfss	___awdiv@dividend+1,7
  3396  051B  2D1D               	goto	u1191
  3397  051C  2D1E               	goto	u1190
  3398  051D                     u1191:
  3399  051D  2D27               	goto	l1711
  3400  051E                     u1190:
  3401  051E                     l1707:
  3402  051E  09A4               	comf	___awdiv@dividend,f
  3403  051F  09A5               	comf	___awdiv@dividend+1,f
  3404  0520  0AA4               	incf	___awdiv@dividend,f
  3405  0521  1903               	skipnz
  3406  0522  0AA5               	incf	___awdiv@dividend+1,f
  3407  0523                     l1709:
  3408  0523  3001               	movlw	1
  3409  0524  00F7               	movwf	??___awdiv
  3410  0525  0877               	movf	??___awdiv,w
  3411  0526  06A7               	xorwf	___awdiv@sign,f
  3412  0527                     l1711:
  3413  0527  01A8               	clrf	___awdiv@quotient
  3414  0528  01A9               	clrf	___awdiv@quotient+1
  3415  0529                     l1713:
  3416  0529  0822               	movf	___awdiv@divisor,w
  3417  052A  0423               	iorwf	___awdiv@divisor+1,w
  3418  052B  1903               	btfsc	3,2
  3419  052C  2D2E               	goto	u1201
  3420  052D  2D2F               	goto	u1200
  3421  052E                     u1201:
  3422  052E  2D66               	goto	l1733
  3423  052F                     u1200:
  3424  052F                     l1715:
  3425  052F  01A6               	clrf	___awdiv@counter
  3426  0530  0AA6               	incf	___awdiv@counter,f
  3427  0531  2D3D               	goto	l1721
  3428  0532                     l1717:
  3429  0532  3001               	movlw	1
  3430  0533                     u1215:
  3431  0533  1003               	clrc
  3432  0534  0DA2               	rlf	___awdiv@divisor,f
  3433  0535  0DA3               	rlf	___awdiv@divisor+1,f
  3434  0536  3EFF               	addlw	-1
  3435  0537  1D03               	skipz
  3436  0538  2D33               	goto	u1215
  3437  0539                     l1719:
  3438  0539  3001               	movlw	1
  3439  053A  00F7               	movwf	??___awdiv
  3440  053B  0877               	movf	??___awdiv,w
  3441  053C  07A6               	addwf	___awdiv@counter,f
  3442  053D                     l1721:
  3443  053D  1FA3               	btfss	___awdiv@divisor+1,7
  3444  053E  2D40               	goto	u1221
  3445  053F  2D41               	goto	u1220
  3446  0540                     u1221:
  3447  0540  2D32               	goto	l1717
  3448  0541                     u1220:
  3449  0541                     l1723:
  3450  0541  3001               	movlw	1
  3451  0542                     u1235:
  3452  0542  1003               	clrc
  3453  0543  0DA8               	rlf	___awdiv@quotient,f
  3454  0544  0DA9               	rlf	___awdiv@quotient+1,f
  3455  0545  3EFF               	addlw	-1
  3456  0546  1D03               	skipz
  3457  0547  2D42               	goto	u1235
  3458  0548  0823               	movf	___awdiv@divisor+1,w
  3459  0549  0225               	subwf	___awdiv@dividend+1,w
  3460  054A  1D03               	skipz
  3461  054B  2D4E               	goto	u1245
  3462  054C  0822               	movf	___awdiv@divisor,w
  3463  054D  0224               	subwf	___awdiv@dividend,w
  3464  054E                     u1245:
  3465  054E  1C03               	skipc
  3466  054F  2D51               	goto	u1241
  3467  0550  2D52               	goto	u1240
  3468  0551                     u1241:
  3469  0551  2D59               	goto	l1729
  3470  0552                     u1240:
  3471  0552                     l1725:
  3472  0552  0822               	movf	___awdiv@divisor,w
  3473  0553  02A4               	subwf	___awdiv@dividend,f
  3474  0554  0823               	movf	___awdiv@divisor+1,w
  3475  0555  1C03               	skipc
  3476  0556  03A5               	decf	___awdiv@dividend+1,f
  3477  0557  02A5               	subwf	___awdiv@dividend+1,f
  3478  0558                     l1727:
  3479  0558  1428               	bsf	___awdiv@quotient,0
  3480  0559                     l1729:
  3481  0559  3001               	movlw	1
  3482  055A                     u1255:
  3483  055A  1003               	clrc
  3484  055B  0CA3               	rrf	___awdiv@divisor+1,f
  3485  055C  0CA2               	rrf	___awdiv@divisor,f
  3486  055D  3EFF               	addlw	-1
  3487  055E  1D03               	skipz
  3488  055F  2D5A               	goto	u1255
  3489  0560                     l1731:
  3490  0560  3001               	movlw	1
  3491  0561  02A6               	subwf	___awdiv@counter,f
  3492  0562  1D03               	btfss	3,2
  3493  0563  2D65               	goto	u1261
  3494  0564  2D66               	goto	u1260
  3495  0565                     u1261:
  3496  0565  2D41               	goto	l1723
  3497  0566                     u1260:
  3498  0566                     l1733:
  3499  0566  0827               	movf	___awdiv@sign,w
  3500  0567  1903               	btfsc	3,2
  3501  0568  2D6A               	goto	u1271
  3502  0569  2D6B               	goto	u1270
  3503  056A                     u1271:
  3504  056A  2D70               	goto	l1737
  3505  056B                     u1270:
  3506  056B                     l1735:
  3507  056B  09A8               	comf	___awdiv@quotient,f
  3508  056C  09A9               	comf	___awdiv@quotient+1,f
  3509  056D  0AA8               	incf	___awdiv@quotient,f
  3510  056E  1903               	skipnz
  3511  056F  0AA9               	incf	___awdiv@quotient+1,f
  3512  0570                     l1737:
  3513  0570  0829               	movf	___awdiv@quotient+1,w
  3514  0571  00A3               	movwf	?___awdiv+1
  3515  0572  0828               	movf	___awdiv@quotient,w
  3516  0573  00A2               	movwf	?___awdiv
  3517  0574                     l524:
  3518  0574  0008               	return
  3519  0575                     __end_of___awdiv:
  3520                           
  3521                           	psect	text17
  3522  06A7                     __ptext17:	
  3523 ;; *************** function _GetThermistorTemp *****************
  3524 ;; Defined at:
  3525 ;;		line 18 in file "ThermistorConv.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  ADCValue        2    0[BANK0 ] unsigned int 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  i               1    7[COMMON] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      char 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1
  3539 ;;      Params:         0       2       0
  3540 ;;      Locals:         1       0       0
  3541 ;;      Temps:          0       3       0
  3542 ;;      Totals:         1       5       0
  3543 ;;Total ram usage:        6 bytes
  3544 ;; Hardware stack levels used: 2
  3545 ;; Hardware stack levels required when called: 1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_tempDisplay
  3550 ;;		_HighLow
  3551 ;;		_ledBarChartC
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555  06A7                     _GetThermistorTemp:	
  3556                           ;psect for function _GetThermistorTemp
  3557                           
  3558  06A7                     l2259:	
  3559                           ;incstack = 0
  3560                           ; Regs used in _GetThermistorTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3561                           
  3562                           
  3563                           ;ThermistorConv.c: 18: signed char GetThermistorTemp (unsigned int ADCValue);ThermistorC
      +                          onv.c: 19: {;ThermistorConv.c: 20:     unsigned char i;;ThermistorConv.c: 23:     for(i=
      +                          0; i<temparraysize; i++)
  3564  06A7  01F7               	clrf	GetThermistorTemp@i
  3565  06A8  2ECF               	goto	l2269
  3566  06A9                     l2261:
  3567                           
  3568                           ;ThermistorConv.c: 24:     {;ThermistorConv.c: 25:         if (ThermValueLUT[i]<ADCValue
      +                          ) return TempLUT[i];
  3569  06A9  0877               	movf	GetThermistorTemp@i,w
  3570  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3571  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3572  06AC  00A2               	movwf	??_GetThermistorTemp
  3573  06AD  0722               	addwf	??_GetThermistorTemp,w
  3574  06AE  3E12               	addlw	low (_ThermValueLUT| (0+32768))
  3575  06AF  0084               	movwf	4
  3576  06B0  3081               	movlw	high (_ThermValueLUT| (0+32768))
  3577  06B1  1803               	skipnc
  3578  06B2  3E01               	addlw	1
  3579  06B3  00FF               	movwf	btemp+1
  3580  06B4  2100               	fcall	stringtab
  3581  06B5  00A3               	movwf	??_GetThermistorTemp+1
  3582  06B6  2100               	fcall	stringtab
  3583  06B7  00A4               	movwf	??_GetThermistorTemp+2
  3584  06B8  0821               	movf	GetThermistorTemp@ADCValue+1,w
  3585  06B9  0224               	subwf	??_GetThermistorTemp+2,w
  3586  06BA  1D03               	skipz
  3587  06BB  2EBE               	goto	u1995
  3588  06BC  0820               	movf	GetThermistorTemp@ADCValue,w
  3589  06BD  0223               	subwf	??_GetThermistorTemp+1,w
  3590  06BE                     u1995:
  3591  06BE  1803               	skipnc
  3592  06BF  2EC1               	goto	u1991
  3593  06C0  2EC2               	goto	u1990
  3594  06C1                     u1991:
  3595  06C1  2ECB               	goto	l2267
  3596  06C2                     u1990:
  3597  06C2                     l2263:
  3598  06C2  0877               	movf	GetThermistorTemp@i,w
  3599  06C3  3E04               	addlw	low (_TempLUT| (0+32768))
  3600  06C4  0084               	movwf	4
  3601  06C5  3082               	movlw	high (_TempLUT| (0+32768))
  3602  06C6  1803               	skipnc
  3603  06C7  3E01               	addlw	1
  3604  06C8  00FF               	movwf	btemp+1
  3605  06C9  2100               	fcall	stringtab
  3606  06CA  2ED6               	goto	l284
  3607  06CB                     l2267:
  3608                           
  3609                           ;ThermistorConv.c: 26:     }
  3610  06CB  3001               	movlw	1
  3611  06CC  00A2               	movwf	??_GetThermistorTemp
  3612  06CD  0822               	movf	??_GetThermistorTemp,w
  3613  06CE  07F7               	addwf	GetThermistorTemp@i,f
  3614  06CF                     l2269:
  3615  06CF  3079               	movlw	121
  3616  06D0  0277               	subwf	GetThermistorTemp@i,w
  3617  06D1  1C03               	skipc
  3618  06D2  2ED4               	goto	u2001
  3619  06D3  2ED5               	goto	u2000
  3620  06D4                     u2001:
  3621  06D4  2EA9               	goto	l2261
  3622  06D5                     u2000:
  3623  06D5                     l2271:
  3624                           
  3625                           ;ThermistorConv.c: 27:     return -99;
  3626  06D5  309D               	movlw	157
  3627  06D6                     l284:
  3628  06D6  0008               	return
  3629  06D7                     __end_of_GetThermistorTemp:
  3630                           
  3631                           	psect	text18
  3632  0087                     __ptext18:	
  3633 ;; *************** function _ADC_read *****************
  3634 ;; Defined at:
  3635 ;;		line 29 in file "ADClib882.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  result          2    5[COMMON] unsigned int 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  2    3[COMMON] unsigned int 
  3642 ;; Registers used:
  3643 ;;		wreg
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1
  3649 ;;      Params:         2       0       0
  3650 ;;      Locals:         2       0       0
  3651 ;;      Temps:          0       0       0
  3652 ;;      Totals:         4       0       0
  3653 ;;Total ram usage:        4 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_tempDisplay
  3660 ;;		_HighLow
  3661 ;;		_ledBarChartC
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665  0087                     _ADC_read:	
  3666                           ;psect for function _ADC_read
  3667                           
  3668  0087                     l1741:	
  3669                           ;incstack = 0
  3670                           ; Regs used in _ADC_read: [wreg]
  3671                           
  3672                           
  3673                           ;ADClib882.c: 31:     unsigned int result;;ADClib882.c: 32:     _delay((unsigned long)((
      +                          5)*(4000000/4000000.0)));
  3674  0087  2888               	nop2	;2 cycle nop
  3675  0088  2889               	nop2	;2 cycle nop
  3676  0089  0000               	nop
  3677                           
  3678                           ;ADClib882.c: 33:     ADCON0bits.GO = 1;
  3679  008A  1283               	bcf	3,5	;RP0=0, select bank0
  3680  008B  1303               	bcf	3,6	;RP1=0, select bank0
  3681  008C  149F               	bsf	31,1	;volatile
  3682  008D                     l151:	
  3683                           ;ADClib882.c: 35:     while(ADCON0bits.GO==1);
  3684                           
  3685  008D  189F               	btfsc	31,1	;volatile
  3686  008E  2890               	goto	u1281
  3687  008F  2891               	goto	u1280
  3688  0090                     u1281:
  3689  0090  288D               	goto	l151
  3690  0091                     u1280:
  3691  0091                     l1743:
  3692                           
  3693                           ;ADClib882.c: 37:     result =(ADRESH<<8)+ADRESL;
  3694  0091  081E               	movf	30,w	;volatile
  3695  0092  00F6               	movwf	ADC_read@result+1
  3696  0093  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0094  1303               	bcf	3,6	;RP1=0, select bank1
  3698  0095  081E               	movf	30,w	;volatile
  3699  0096  00F5               	movwf	ADC_read@result
  3700                           
  3701                           ;ADClib882.c: 38:     return(result);
  3702  0097  0876               	movf	ADC_read@result+1,w
  3703  0098  00F4               	movwf	?_ADC_read+1
  3704  0099  0875               	movf	ADC_read@result,w
  3705  009A  00F3               	movwf	?_ADC_read
  3706  009B                     l154:
  3707  009B  0008               	return
  3708  009C                     __end_of_ADC_read:
  3709                           
  3710                           	psect	text19
  3711  00C3                     __ptext19:	
  3712 ;; *************** function _ADC_channel_select *****************
  3713 ;; Defined at:
  3714 ;;		line 47 in file "ADClib882.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  channel         1    wreg     unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  channel         1    4[COMMON] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1
  3728 ;;      Params:         0       0       0
  3729 ;;      Locals:         1       0       0
  3730 ;;      Temps:          1       0       0
  3731 ;;      Totals:         2       0       0
  3732 ;;Total ram usage:        2 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 1
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_tempDisplay
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742  00C3                     _ADC_channel_select:	
  3743                           ;psect for function _ADC_channel_select
  3744                           
  3745                           
  3746                           ;incstack = 0
  3747                           ; Regs used in _ADC_channel_select: [wreg+status,2+status,0]
  3748                           ;ADC_channel_select@channel stored from wreg
  3749  00C3  00F4               	movwf	ADC_channel_select@channel
  3750  00C4                     l1799:
  3751                           
  3752                           ;ADClib882.c: 47: void ADC_channel_select(unsigned char channel);ADClib882.c: 48: {;ADCl
      +                          ib882.c: 49:     ADCON0bits.CHS=channel;
  3753  00C4  0874               	movf	ADC_channel_select@channel,w
  3754  00C5  00F3               	movwf	??_ADC_channel_select
  3755  00C6  0DF3               	rlf	??_ADC_channel_select,f
  3756  00C7  0DF3               	rlf	??_ADC_channel_select,f
  3757  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  3758  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  3759  00CA  081F               	movf	31,w	;volatile
  3760  00CB  0673               	xorwf	??_ADC_channel_select,w
  3761  00CC  39C3               	andlw	-61
  3762  00CD  0673               	xorwf	??_ADC_channel_select,w
  3763  00CE  009F               	movwf	31	;volatile
  3764  00CF                     l157:
  3765  00CF  0008               	return
  3766  00D0                     __end_of_ADC_channel_select:
  3767                           
  3768                           	psect	text20
  3769  07B5                     __ptext20:	
  3770 ;; *************** function _config *****************
  3771 ;; Defined at:
  3772 ;;		line 64 in file "Assignment4U2061093.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1
  3786 ;;      Params:         0       0       0
  3787 ;;      Locals:         0       0       0
  3788 ;;      Temps:          0       0       0
  3789 ;;      Totals:         0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; Hardware stack levels required when called: 1
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800  07B5                     _config:	
  3801                           ;psect for function _config
  3802                           
  3803  07B5                     l1233:	
  3804                           ;incstack = 0
  3805                           ; Regs used in _config: [wreg+status,2]
  3806                           
  3807                           
  3808                           ;Assignment4U2061093.c: 66:     INTCONbits.GIE = 0;
  3809  07B5  138B               	bcf	11,7	;volatile
  3810  07B6                     l1235:
  3811                           
  3812                           ;Assignment4U2061093.c: 68:     ANSEL = 0x00;
  3813  07B6  1683               	bsf	3,5	;RP0=1, select bank3
  3814  07B7  1703               	bsf	3,6	;RP1=1, select bank3
  3815  07B8  0188               	clrf	8	;volatile
  3816                           
  3817                           ;Assignment4U2061093.c: 69:     ANSELH = 0x00;
  3818  07B9  0189               	clrf	9	;volatile
  3819                           
  3820                           ;Assignment4U2061093.c: 70:     TRISA = 0x00;
  3821  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  3822  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  3823  07BC  0185               	clrf	5	;volatile
  3824                           
  3825                           ;Assignment4U2061093.c: 71:     PORTA = 0x00;
  3826  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  3827  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  3828  07BF  0185               	clrf	5	;volatile
  3829  07C0                     l1237:
  3830                           
  3831                           ;Assignment4U2061093.c: 72:     TRISB = 0x03;
  3832  07C0  3003               	movlw	3
  3833  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  3834  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  3835  07C3  0086               	movwf	6	;volatile
  3836  07C4                     l1239:
  3837                           
  3838                           ;Assignment4U2061093.c: 73:     PORTB = 0x00;
  3839  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3840  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3841  07C6  0186               	clrf	6	;volatile
  3842                           
  3843                           ;Assignment4U2061093.c: 74:     T1CON = 0x30;
  3844  07C7  3030               	movlw	48
  3845  07C8  0090               	movwf	16	;volatile
  3846  07C9                     l1241:
  3847                           
  3848                           ;Assignment4U2061093.c: 76:     T1CONbits.TMR1ON = 0;
  3849  07C9  1010               	bcf	16,0	;volatile
  3850  07CA                     l1243:
  3851                           
  3852                           ;Assignment4U2061093.c: 77:     TMR1 = 3036;
  3853  07CA  300B               	movlw	11
  3854  07CB  008F               	movwf	15	;volatile
  3855  07CC  30DC               	movlw	220
  3856  07CD  008E               	movwf	14	;volatile
  3857  07CE                     l1245:
  3858                           
  3859                           ;Assignment4U2061093.c: 79:     PIE1bits.TMR1IE = 1;
  3860  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  3861  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  3862  07D0  140C               	bsf	12,0	;volatile
  3863  07D1                     l1247:
  3864                           
  3865                           ;Assignment4U2061093.c: 80:     PIR1bits.TMR1IF = 0;
  3866  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3867  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3868  07D3  100C               	bcf	12,0	;volatile
  3869  07D4                     l1249:
  3870                           
  3871                           ;Assignment4U2061093.c: 82:     INTCONbits.PEIE =1;
  3872  07D4  170B               	bsf	11,6	;volatile
  3873  07D5                     l1251:
  3874                           
  3875                           ;Assignment4U2061093.c: 83:     INTCONbits.GIE=1;
  3876  07D5  178B               	bsf	11,7	;volatile
  3877  07D6                     l1253:
  3878                           
  3879                           ;Assignment4U2061093.c: 84:     T1CONbits.TMR1ON = 1;
  3880  07D6  1410               	bsf	16,0	;volatile
  3881  07D7                     l1255:
  3882                           
  3883                           ;Assignment4U2061093.c: 87:         INTCONbits.RBIE = 1;
  3884  07D7  158B               	bsf	11,3	;volatile
  3885  07D8                     l1257:
  3886                           
  3887                           ;Assignment4U2061093.c: 88:         INTCONbits.RBIF = 0;
  3888  07D8  100B               	bcf	11,0	;volatile
  3889                           
  3890                           ;Assignment4U2061093.c: 89:         IOCBbits.IOCB = 3;
  3891  07D9  3003               	movlw	3
  3892  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  3893  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  3894  07DC  0096               	movwf	22	;volatile
  3895  07DD                     l91:
  3896  07DD  0008               	return
  3897  07DE                     __end_of_config:
  3898                           
  3899                           	psect	text21
  3900  0432                     __ptext21:	
  3901 ;; *************** function _LCD_initialise *****************
  3902 ;; Defined at:
  3903 ;;		line 42 in file "LCDdrive882.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  counter         2    7[BANK0 ] unsigned int 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, pclath, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1
  3917 ;;      Params:         0       0       0
  3918 ;;      Locals:         0       2       0
  3919 ;;      Temps:          0       0       0
  3920 ;;      Totals:         0       2       0
  3921 ;;Total ram usage:        2 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 3
  3924 ;; This function calls:
  3925 ;;		_LCD_clear
  3926 ;;		_LCD_write
  3927 ;; This function is called by:
  3928 ;;		_main
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932  0432                     _LCD_initialise:	
  3933                           ;psect for function _LCD_initialise
  3934                           
  3935  0432                     l2339:	
  3936                           ;incstack = 0
  3937                           ; Regs used in _LCD_initialise: [wreg+status,2+status,0+pclath+cstack]
  3938                           
  3939                           
  3940                           ;LCDdrive882.c: 44:     unsigned int counter;;LCDdrive882.c: 46:         LCD_write(0x33,
      +                           0);
  3941  0432  01F3               	clrf	LCD_write@rs
  3942  0433  3033               	movlw	51
  3943  0434  232C               	fcall	_LCD_write
  3944  0435                     l2341:
  3945                           
  3946                           ;LCDdrive882.c: 47:         for (counter = 0; counter < 1250; counter++);
  3947  0435  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0436  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0437  01A7               	clrf	LCD_initialise@counter
  3950  0438  01A8               	clrf	LCD_initialise@counter+1
  3951  0439                     l2347:
  3952  0439  3001               	movlw	1
  3953  043A  07A7               	addwf	LCD_initialise@counter,f
  3954  043B  1803               	skipnc
  3955  043C  0AA8               	incf	LCD_initialise@counter+1,f
  3956  043D  3000               	movlw	0
  3957  043E  07A8               	addwf	LCD_initialise@counter+1,f
  3958  043F  3004               	movlw	4
  3959  0440  0228               	subwf	LCD_initialise@counter+1,w
  3960  0441  30E2               	movlw	226
  3961  0442  1903               	skipnz
  3962  0443  0227               	subwf	LCD_initialise@counter,w
  3963  0444  1C03               	skipc
  3964  0445  2C47               	goto	u2071
  3965  0446  2C48               	goto	u2070
  3966  0447                     u2071:
  3967  0447  2C39               	goto	l2347
  3968  0448                     u2070:
  3969  0448                     l2349:
  3970                           
  3971                           ;LCDdrive882.c: 50:         LCD_write(0x32, 0);
  3972  0448  01F3               	clrf	LCD_write@rs
  3973  0449  3032               	movlw	50
  3974  044A  232C               	fcall	_LCD_write
  3975  044B                     l2351:
  3976                           
  3977                           ;LCDdrive882.c: 51:         for (counter = 0; counter < 1250; counter++);
  3978  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3979  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3980  044D  01A7               	clrf	LCD_initialise@counter
  3981  044E  01A8               	clrf	LCD_initialise@counter+1
  3982  044F                     l2357:
  3983  044F  3001               	movlw	1
  3984  0450  07A7               	addwf	LCD_initialise@counter,f
  3985  0451  1803               	skipnc
  3986  0452  0AA8               	incf	LCD_initialise@counter+1,f
  3987  0453  3000               	movlw	0
  3988  0454  07A8               	addwf	LCD_initialise@counter+1,f
  3989  0455  3004               	movlw	4
  3990  0456  0228               	subwf	LCD_initialise@counter+1,w
  3991  0457  30E2               	movlw	226
  3992  0458  1903               	skipnz
  3993  0459  0227               	subwf	LCD_initialise@counter,w
  3994  045A  1C03               	skipc
  3995  045B  2C5D               	goto	u2081
  3996  045C  2C5E               	goto	u2080
  3997  045D                     u2081:
  3998  045D  2C4F               	goto	l2357
  3999  045E                     u2080:
  4000  045E                     l2359:
  4001                           
  4002                           ;LCDdrive882.c: 54:         LCD_write(0x2c, 0);
  4003  045E  01F3               	clrf	LCD_write@rs
  4004  045F  302C               	movlw	44
  4005  0460  232C               	fcall	_LCD_write
  4006  0461                     l2361:
  4007                           
  4008                           ;LCDdrive882.c: 55:         for (counter = 0; counter < 1250; counter++);
  4009  0461  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0462  1303               	bcf	3,6	;RP1=0, select bank0
  4011  0463  01A7               	clrf	LCD_initialise@counter
  4012  0464  01A8               	clrf	LCD_initialise@counter+1
  4013  0465                     l2367:
  4014  0465  3001               	movlw	1
  4015  0466  07A7               	addwf	LCD_initialise@counter,f
  4016  0467  1803               	skipnc
  4017  0468  0AA8               	incf	LCD_initialise@counter+1,f
  4018  0469  3000               	movlw	0
  4019  046A  07A8               	addwf	LCD_initialise@counter+1,f
  4020  046B  3004               	movlw	4
  4021  046C  0228               	subwf	LCD_initialise@counter+1,w
  4022  046D  30E2               	movlw	226
  4023  046E  1903               	skipnz
  4024  046F  0227               	subwf	LCD_initialise@counter,w
  4025  0470  1C03               	skipc
  4026  0471  2C73               	goto	u2091
  4027  0472  2C74               	goto	u2090
  4028  0473                     u2091:
  4029  0473  2C65               	goto	l2367
  4030  0474                     u2090:
  4031  0474                     l2369:
  4032                           
  4033                           ;LCDdrive882.c: 58:         LCD_write(0x06, 0);
  4034  0474  01F3               	clrf	LCD_write@rs
  4035  0475  3006               	movlw	6
  4036  0476  232C               	fcall	_LCD_write
  4037  0477                     l2371:
  4038                           
  4039                           ;LCDdrive882.c: 59:         for (counter = 0; counter < 1250; counter++);
  4040  0477  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0478  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0479  01A7               	clrf	LCD_initialise@counter
  4043  047A  01A8               	clrf	LCD_initialise@counter+1
  4044  047B                     l2377:
  4045  047B  3001               	movlw	1
  4046  047C  07A7               	addwf	LCD_initialise@counter,f
  4047  047D  1803               	skipnc
  4048  047E  0AA8               	incf	LCD_initialise@counter+1,f
  4049  047F  3000               	movlw	0
  4050  0480  07A8               	addwf	LCD_initialise@counter+1,f
  4051  0481  3004               	movlw	4
  4052  0482  0228               	subwf	LCD_initialise@counter+1,w
  4053  0483  30E2               	movlw	226
  4054  0484  1903               	skipnz
  4055  0485  0227               	subwf	LCD_initialise@counter,w
  4056  0486  1C03               	skipc
  4057  0487  2C89               	goto	u2101
  4058  0488  2C8A               	goto	u2100
  4059  0489                     u2101:
  4060  0489  2C7B               	goto	l2377
  4061  048A                     u2100:
  4062  048A                     l2379:
  4063                           
  4064                           ;LCDdrive882.c: 62:         LCD_write(0x0c, 0);
  4065  048A  01F3               	clrf	LCD_write@rs
  4066  048B  300C               	movlw	12
  4067  048C  232C               	fcall	_LCD_write
  4068  048D                     l2381:
  4069                           
  4070                           ;LCDdrive882.c: 63:         for (counter = 0; counter < 1250; counter++);
  4071  048D  1283               	bcf	3,5	;RP0=0, select bank0
  4072  048E  1303               	bcf	3,6	;RP1=0, select bank0
  4073  048F  01A7               	clrf	LCD_initialise@counter
  4074  0490  01A8               	clrf	LCD_initialise@counter+1
  4075  0491                     l2387:
  4076  0491  3001               	movlw	1
  4077  0492  07A7               	addwf	LCD_initialise@counter,f
  4078  0493  1803               	skipnc
  4079  0494  0AA8               	incf	LCD_initialise@counter+1,f
  4080  0495  3000               	movlw	0
  4081  0496  07A8               	addwf	LCD_initialise@counter+1,f
  4082  0497  3004               	movlw	4
  4083  0498  0228               	subwf	LCD_initialise@counter+1,w
  4084  0499  30E2               	movlw	226
  4085  049A  1903               	skipnz
  4086  049B  0227               	subwf	LCD_initialise@counter,w
  4087  049C  1C03               	skipc
  4088  049D  2C9F               	goto	u2111
  4089  049E  2CA0               	goto	u2110
  4090  049F                     u2111:
  4091  049F  2C91               	goto	l2387
  4092  04A0                     u2110:
  4093  04A0                     l2389:
  4094                           
  4095                           ;LCDdrive882.c: 65:         LCD_clear();
  4096  04A0  2022               	fcall	_LCD_clear
  4097  04A1                     l186:
  4098  04A1  0008               	return
  4099  04A2                     __end_of_LCD_initialise:
  4100                           
  4101                           	psect	text22
  4102  0022                     __ptext22:	
  4103 ;; *************** function _LCD_clear *****************
  4104 ;; Defined at:
  4105 ;;		line 143 in file "LCDdrive882.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  counter         2    5[COMMON] unsigned int 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1
  4119 ;;      Params:         0       0       0
  4120 ;;      Locals:         2       0       0
  4121 ;;      Temps:          0       0       0
  4122 ;;      Totals:         2       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 2
  4126 ;; This function calls:
  4127 ;;		_LCD_write
  4128 ;; This function is called by:
  4129 ;;		_tempDisplay
  4130 ;;		_LCD_initialise
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134  0022                     _LCD_clear:	
  4135                           ;psect for function _LCD_clear
  4136                           
  4137  0022                     l2291:	
  4138                           ;incstack = 0
  4139                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  4140                           
  4141                           
  4142                           ;LCDdrive882.c: 145:         unsigned int counter;;LCDdrive882.c: 146:         LCD_write
      +                          (1, 0);
  4143  0022  01F3               	clrf	LCD_write@rs
  4144  0023  3001               	movlw	1
  4145  0024  232C               	fcall	_LCD_write
  4146  0025                     l2293:
  4147                           
  4148                           ;LCDdrive882.c: 147:         for (counter = 0; counter < 1250; counter++);
  4149  0025  01F5               	clrf	LCD_clear@counter
  4150  0026  01F6               	clrf	LCD_clear@counter+1
  4151  0027                     l2299:
  4152  0027  3001               	movlw	1
  4153  0028  07F5               	addwf	LCD_clear@counter,f
  4154  0029  1803               	skipnc
  4155  002A  0AF6               	incf	LCD_clear@counter+1,f
  4156  002B  3000               	movlw	0
  4157  002C  07F6               	addwf	LCD_clear@counter+1,f
  4158  002D  3004               	movlw	4
  4159  002E  0276               	subwf	LCD_clear@counter+1,w
  4160  002F  30E2               	movlw	226
  4161  0030  1903               	skipnz
  4162  0031  0275               	subwf	LCD_clear@counter,w
  4163  0032  1C03               	skipc
  4164  0033  2835               	goto	u2011
  4165  0034  2836               	goto	u2010
  4166  0035                     u2011:
  4167  0035  2827               	goto	l2299
  4168  0036                     u2010:
  4169  0036                     l2301:
  4170                           
  4171                           ;LCDdrive882.c: 148:         LCD_write(2, 0);
  4172  0036  01F3               	clrf	LCD_write@rs
  4173  0037  3002               	movlw	2
  4174  0038  232C               	fcall	_LCD_write
  4175  0039                     l2303:
  4176                           
  4177                           ;LCDdrive882.c: 149:         for (counter = 0; counter < 1250; counter++);
  4178  0039  01F5               	clrf	LCD_clear@counter
  4179  003A  01F6               	clrf	LCD_clear@counter+1
  4180  003B                     l2309:
  4181  003B  3001               	movlw	1
  4182  003C  07F5               	addwf	LCD_clear@counter,f
  4183  003D  1803               	skipnc
  4184  003E  0AF6               	incf	LCD_clear@counter+1,f
  4185  003F  3000               	movlw	0
  4186  0040  07F6               	addwf	LCD_clear@counter+1,f
  4187  0041  3004               	movlw	4
  4188  0042  0276               	subwf	LCD_clear@counter+1,w
  4189  0043  30E2               	movlw	226
  4190  0044  1903               	skipnz
  4191  0045  0275               	subwf	LCD_clear@counter,w
  4192  0046  1C03               	skipc
  4193  0047  2849               	goto	u2021
  4194  0048  284A               	goto	u2020
  4195  0049                     u2021:
  4196  0049  283B               	goto	l2309
  4197  004A                     u2020:
  4198  004A                     l211:
  4199  004A  0008               	return
  4200  004B                     __end_of_LCD_clear:
  4201                           
  4202                           	psect	text23
  4203  032C                     __ptext23:	
  4204 ;; *************** function _LCD_write *****************
  4205 ;; Defined at:
  4206 ;;		line 73 in file "LCDdrive882.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  c               1    wreg     unsigned char 
  4209 ;;  rs              1    3[COMMON] unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  c               1    3[BANK0 ] unsigned char 
  4212 ;;  counter         2    5[BANK0 ] unsigned int 
  4213 ;;  RSmask          1    4[BANK0 ] unsigned char 
  4214 ;;  TRISC_BAK       1    2[BANK0 ] unsigned char 
  4215 ;;  intsON          1    1[BANK0 ] unsigned char 
  4216 ;;  temp            1    0[BANK0 ] unsigned char 
  4217 ;;  INTCON_BAK      1    0        unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, status,2, status,0
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1
  4227 ;;      Params:         1       0       0
  4228 ;;      Locals:         0       7       0
  4229 ;;      Temps:          1       0       0
  4230 ;;      Totals:         2       7       0
  4231 ;;Total ram usage:        9 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_LCD_initialise
  4238 ;;		_LCD_putch
  4239 ;;		_LCD_clear
  4240 ;;		_LCD_cursor
  4241 ;;		_LCD_cursor_on
  4242 ;;		_LCD_cursor_off
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246  032C                     _LCD_write:	
  4247                           ;psect for function _LCD_write
  4248                           
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _LCD_write: [wreg+status,2+status,0]
  4252                           ;LCD_write@c stored from wreg
  4253  032C  1283               	bcf	3,5	;RP0=0, select bank0
  4254  032D  1303               	bcf	3,6	;RP1=0, select bank0
  4255  032E  00A3               	movwf	LCD_write@c
  4256  032F                     l2049:
  4257                           
  4258                           ;LCDdrive882.c: 73: void LCD_write(unsigned char c, unsigned char rs);LCDdrive882.c: 74:
      +                           {;LCDdrive882.c: 75:         unsigned char temp, intsON;;LCDdrive882.c: 76:         uns
      +                          igned char RSmask = 0;
  4259  032F  01A4               	clrf	LCD_write@RSmask
  4260  0330                     l2051:
  4261                           
  4262                           ;LCDdrive882.c: 77:         unsigned char TRISC_BAK;;LCDdrive882.c: 79:         unsigned
      +                           char INTCON_BAK;;LCDdrive882.c: 80:         unsigned int counter;;LCDdrive882.c: 84:   
      +                                intsON = INTCONbits.GIE;
  4263  0330  3000               	movlw	0
  4264  0331  1B8B               	btfsc	11,7	;volatile
  4265  0332  3001               	movlw	1
  4266  0333  00A1               	movwf	LCD_write@intsON
  4267  0334                     l2053:
  4268                           
  4269                           ;LCDdrive882.c: 85:         INTCONbits.GIE = 0;
  4270  0334  138B               	bcf	11,7	;volatile
  4271                           
  4272                           ;LCDdrive882.c: 86:         TRISC_BAK = TRISC;
  4273  0335  1683               	bsf	3,5	;RP0=1, select bank1
  4274  0336  1303               	bcf	3,6	;RP1=0, select bank1
  4275  0337  0807               	movf	7,w	;volatile
  4276  0338  00F4               	movwf	??_LCD_write
  4277  0339  0874               	movf	??_LCD_write,w
  4278  033A  1283               	bcf	3,5	;RP0=0, select bank0
  4279  033B  1303               	bcf	3,6	;RP1=0, select bank0
  4280  033C  00A2               	movwf	LCD_write@TRISC_BAK
  4281  033D                     l2055:
  4282                           
  4283                           ;LCDdrive882.c: 91:         TRISC = 0x00;
  4284  033D  1683               	bsf	3,5	;RP0=1, select bank1
  4285  033E  1303               	bcf	3,6	;RP1=0, select bank1
  4286  033F  0187               	clrf	7	;volatile
  4287  0340                     l2057:
  4288                           
  4289                           ;LCDdrive882.c: 93:         if (rs == 1) RSmask = 0x01;
  4290  0340  0373               	decf	LCD_write@rs,w
  4291  0341  1D03               	btfss	3,2
  4292  0342  2B44               	goto	u1631
  4293  0343  2B45               	goto	u1630
  4294  0344                     u1631:
  4295  0344  2B49               	goto	l2061
  4296  0345                     u1630:
  4297  0345                     l2059:
  4298  0345  1283               	bcf	3,5	;RP0=0, select bank0
  4299  0346  1303               	bcf	3,6	;RP1=0, select bank0
  4300  0347  01A4               	clrf	LCD_write@RSmask
  4301  0348  0AA4               	incf	LCD_write@RSmask,f
  4302  0349                     l2061:
  4303                           
  4304                           ;LCDdrive882.c: 96:         temp = c;
  4305  0349  1283               	bcf	3,5	;RP0=0, select bank0
  4306  034A  0823               	movf	LCD_write@c,w
  4307  034B  00F4               	movwf	??_LCD_write
  4308  034C  0874               	movf	??_LCD_write,w
  4309  034D  00A0               	movwf	LCD_write@temp
  4310  034E                     l2063:
  4311                           
  4312                           ;LCDdrive882.c: 97:         PORTC = (temp & 0xF0) | RSmask;
  4313  034E  0820               	movf	LCD_write@temp,w
  4314  034F  39F0               	andlw	240
  4315  0350  0424               	iorwf	LCD_write@RSmask,w
  4316  0351  0087               	movwf	7	;volatile
  4317  0352                     l2065:
  4318                           
  4319                           ;LCDdrive882.c: 101:         PORTCbits.RC3 = 1;
  4320  0352  1587               	bsf	7,3	;volatile
  4321  0353                     l2067:
  4322                           
  4323                           ;LCDdrive882.c: 102:         for (counter = 0; counter < 2; counter++);
  4324  0353  01A5               	clrf	LCD_write@counter
  4325  0354  01A6               	clrf	LCD_write@counter+1
  4326  0355                     l2073:
  4327  0355  3001               	movlw	1
  4328  0356  07A5               	addwf	LCD_write@counter,f
  4329  0357  1803               	skipnc
  4330  0358  0AA6               	incf	LCD_write@counter+1,f
  4331  0359  3000               	movlw	0
  4332  035A  07A6               	addwf	LCD_write@counter+1,f
  4333  035B  3000               	movlw	0
  4334  035C  0226               	subwf	LCD_write@counter+1,w
  4335  035D  3002               	movlw	2
  4336  035E  1903               	skipnz
  4337  035F  0225               	subwf	LCD_write@counter,w
  4338  0360  1C03               	skipc
  4339  0361  2B63               	goto	u1641
  4340  0362  2B64               	goto	u1640
  4341  0363                     u1641:
  4342  0363  2B55               	goto	l2073
  4343  0364                     u1640:
  4344  0364                     l191:
  4345                           
  4346                           ;LCDdrive882.c: 104:         PORTCbits.RC3 = 0;
  4347  0364  1187               	bcf	7,3	;volatile
  4348  0365                     l2075:
  4349                           
  4350                           ;LCDdrive882.c: 105:         for (counter = 0; counter < 2; counter++);
  4351  0365  01A5               	clrf	LCD_write@counter
  4352  0366  01A6               	clrf	LCD_write@counter+1
  4353  0367                     l2081:
  4354  0367  3001               	movlw	1
  4355  0368  07A5               	addwf	LCD_write@counter,f
  4356  0369  1803               	skipnc
  4357  036A  0AA6               	incf	LCD_write@counter+1,f
  4358  036B  3000               	movlw	0
  4359  036C  07A6               	addwf	LCD_write@counter+1,f
  4360  036D  3000               	movlw	0
  4361  036E  0226               	subwf	LCD_write@counter+1,w
  4362  036F  3002               	movlw	2
  4363  0370  1903               	skipnz
  4364  0371  0225               	subwf	LCD_write@counter,w
  4365  0372  1C03               	skipc
  4366  0373  2B75               	goto	u1651
  4367  0374  2B76               	goto	u1650
  4368  0375                     u1651:
  4369  0375  2B67               	goto	l2081
  4370  0376                     u1650:
  4371  0376                     l2083:
  4372                           
  4373                           ;LCDdrive882.c: 108:         PORTC = (c << 4) | RSmask;
  4374  0376  0823               	movf	LCD_write@c,w
  4375  0377  00F4               	movwf	??_LCD_write
  4376  0378  3003               	movlw	3
  4377  0379                     u1665:
  4378  0379  1003               	clrc
  4379  037A  0DF4               	rlf	??_LCD_write,f
  4380  037B  3EFF               	addlw	-1
  4381  037C  1D03               	skipz
  4382  037D  2B79               	goto	u1665
  4383  037E  1003               	clrc
  4384  037F  0D74               	rlf	??_LCD_write,w
  4385  0380  0424               	iorwf	LCD_write@RSmask,w
  4386  0381  0087               	movwf	7	;volatile
  4387  0382                     l2085:
  4388                           
  4389                           ;LCDdrive882.c: 112:         PORTCbits.RC3 = 1;
  4390  0382  1587               	bsf	7,3	;volatile
  4391  0383                     l2087:
  4392                           
  4393                           ;LCDdrive882.c: 113:         for (counter = 0; counter < 2; counter++);
  4394  0383  01A5               	clrf	LCD_write@counter
  4395  0384  01A6               	clrf	LCD_write@counter+1
  4396  0385                     l2093:
  4397  0385  3001               	movlw	1
  4398  0386  07A5               	addwf	LCD_write@counter,f
  4399  0387  1803               	skipnc
  4400  0388  0AA6               	incf	LCD_write@counter+1,f
  4401  0389  3000               	movlw	0
  4402  038A  07A6               	addwf	LCD_write@counter+1,f
  4403  038B  3000               	movlw	0
  4404  038C  0226               	subwf	LCD_write@counter+1,w
  4405  038D  3002               	movlw	2
  4406  038E  1903               	skipnz
  4407  038F  0225               	subwf	LCD_write@counter,w
  4408  0390  1C03               	skipc
  4409  0391  2B93               	goto	u1671
  4410  0392  2B94               	goto	u1670
  4411  0393                     u1671:
  4412  0393  2B85               	goto	l2093
  4413  0394                     u1670:
  4414  0394                     l195:
  4415                           
  4416                           ;LCDdrive882.c: 115:         PORTCbits.RC3 = 0;
  4417  0394  1187               	bcf	7,3	;volatile
  4418  0395                     l2095:
  4419                           
  4420                           ;LCDdrive882.c: 116:         for (counter = 0; counter < 2; counter++);
  4421  0395  01A5               	clrf	LCD_write@counter
  4422  0396  01A6               	clrf	LCD_write@counter+1
  4423  0397                     l2101:
  4424  0397  3001               	movlw	1
  4425  0398  07A5               	addwf	LCD_write@counter,f
  4426  0399  1803               	skipnc
  4427  039A  0AA6               	incf	LCD_write@counter+1,f
  4428  039B  3000               	movlw	0
  4429  039C  07A6               	addwf	LCD_write@counter+1,f
  4430  039D  3000               	movlw	0
  4431  039E  0226               	subwf	LCD_write@counter+1,w
  4432  039F  3002               	movlw	2
  4433  03A0  1903               	skipnz
  4434  03A1  0225               	subwf	LCD_write@counter,w
  4435  03A2  1C03               	skipc
  4436  03A3  2BA5               	goto	u1681
  4437  03A4  2BA6               	goto	u1680
  4438  03A5                     u1681:
  4439  03A5  2B97               	goto	l2101
  4440  03A6                     u1680:
  4441  03A6                     l2103:
  4442                           
  4443                           ;LCDdrive882.c: 123:         TRISC = TRISC_BAK;
  4444  03A6  0822               	movf	LCD_write@TRISC_BAK,w
  4445  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  4446  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  4447  03A9  0087               	movwf	7	;volatile
  4448  03AA                     l2105:
  4449                           
  4450                           ;LCDdrive882.c: 129:         if(intsON) GIE = 1;
  4451  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  4452  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  4453  03AC  0821               	movf	LCD_write@intsON,w
  4454  03AD  1903               	btfsc	3,2
  4455  03AE  2BB0               	goto	u1691
  4456  03AF  2BB1               	goto	u1690
  4457  03B0                     u1691:
  4458  03B0  2BB2               	goto	l199
  4459  03B1                     u1690:
  4460  03B1                     l2107:
  4461  03B1  178B               	bsf	11,7	;volatile
  4462  03B2                     l199:
  4463  03B2  0008               	return
  4464  03B3                     __end_of_LCD_write:
  4465                           
  4466                           	psect	text24
  4467  07DE                     __ptext24:	
  4468 ;; *************** function _ADC_initialise *****************
  4469 ;; Defined at:
  4470 ;;		line 13 in file "ADClib882.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1
  4484 ;;      Params:         0       0       0
  4485 ;;      Locals:         0       0       0
  4486 ;;      Temps:          1       0       0
  4487 ;;      Totals:         1       0       0
  4488 ;;Total ram usage:        1 bytes
  4489 ;; Hardware stack levels used: 1
  4490 ;; Hardware stack levels required when called: 1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498  07DE                     _ADC_initialise:	
  4499                           ;psect for function _ADC_initialise
  4500                           
  4501  07DE                     l1311:	
  4502                           ;incstack = 0
  4503                           ; Regs used in _ADC_initialise: [wreg+status,2+status,0]
  4504                           
  4505                           
  4506                           ;ADClib882.c: 15:     TRISB |= 0x18;
  4507  07DE  3018               	movlw	24
  4508  07DF  00F3               	movwf	??_ADC_initialise
  4509  07E0  0873               	movf	??_ADC_initialise,w
  4510  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  4511  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  4512  07E3  0486               	iorwf	6,f	;volatile
  4513                           
  4514                           ;ADClib882.c: 16:     ANSELH |= 0x0A;
  4515  07E4  300A               	movlw	10
  4516  07E5  00F3               	movwf	??_ADC_initialise
  4517  07E6  0873               	movf	??_ADC_initialise,w
  4518  07E7  1683               	bsf	3,5	;RP0=1, select bank3
  4519  07E8  1703               	bsf	3,6	;RP1=1, select bank3
  4520  07E9  0489               	iorwf	9,f	;volatile
  4521  07EA                     l1313:
  4522                           
  4523                           ;ADClib882.c: 17:     ADCON0 = 0x64;
  4524  07EA  3064               	movlw	100
  4525  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  4526  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  4527  07ED  009F               	movwf	31	;volatile
  4528  07EE                     l1315:
  4529                           
  4530                           ;ADClib882.c: 18:     ADCON1 = 0x80;
  4531  07EE  3080               	movlw	128
  4532  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  4533  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  4534  07F1  009F               	movwf	31	;volatile
  4535  07F2                     l1317:
  4536                           
  4537                           ;ADClib882.c: 19:     ADCON0bits.ADON = 1;
  4538  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  4539  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  4540  07F4  141F               	bsf	31,0	;volatile
  4541  07F5                     l148:
  4542  07F5  0008               	return
  4543  07F6                     __end_of_ADC_initialise:
  4544                           
  4545                           	psect	text25
  4546  0633                     __ptext25:	
  4547 ;; *************** function _myISR *****************
  4548 ;; Defined at:
  4549 ;;		line 173 in file "Assignment4U2061093.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1
  4563 ;;      Params:         0       0       0
  4564 ;;      Locals:         0       0       0
  4565 ;;      Temps:          3       0       0
  4566 ;;      Totals:         3       0       0
  4567 ;;Total ram usage:        3 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		Interrupt level 1
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576  0633                     _myISR:	
  4577                           ;psect for function _myISR
  4578                           
  4579  0633                     i1l1921:
  4580                           
  4581                           ;Assignment4U2061093.c: 175:     if(PIR1bits.TMR1IF)
  4582  0633  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0634  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0635  1C0C               	btfss	12,0	;volatile
  4585  0636  2E38               	goto	u144_21
  4586  0637  2E39               	goto	u144_20
  4587  0638                     u144_21:
  4588  0638  2E4D               	goto	i1l1933
  4589  0639                     u144_20:
  4590  0639                     i1l1923:
  4591                           
  4592                           ;Assignment4U2061093.c: 176:     {;Assignment4U2061093.c: 178:         T1CONbits.TMR1ON 
      +                          = 0;
  4593  0639  1010               	bcf	16,0	;volatile
  4594                           
  4595                           ;Assignment4U2061093.c: 179:         TMR1 = 3036;
  4596  063A  300B               	movlw	11
  4597  063B  008F               	movwf	15	;volatile
  4598  063C  30DC               	movlw	220
  4599  063D  008E               	movwf	14	;volatile
  4600                           
  4601                           ;Assignment4U2061093.c: 180:         T1CONbits.TMR1ON = 1;
  4602  063E  1410               	bsf	16,0	;volatile
  4603  063F                     i1l1925:
  4604                           
  4605                           ;Assignment4U2061093.c: 182:         count++;
  4606  063F  3001               	movlw	1
  4607  0640  00F0               	movwf	??_myISR
  4608  0641  0870               	movf	??_myISR,w
  4609  0642  07DF               	addwf	_count,f
  4610                           
  4611                           ;Assignment4U2061093.c: 183:         if (count == 2){
  4612  0643  3002               	movlw	2
  4613  0644  065F               	xorwf	_count,w
  4614  0645  1D03               	btfss	3,2
  4615  0646  2E48               	goto	u145_21
  4616  0647  2E49               	goto	u145_20
  4617  0648                     u145_21:
  4618  0648  2E4C               	goto	i1l1931
  4619  0649                     u145_20:
  4620  0649                     i1l1927:
  4621                           
  4622                           ;Assignment4U2061093.c: 184:             count = 0;
  4623  0649  01DF               	clrf	_count
  4624  064A                     i1l1929:
  4625                           
  4626                           ;Assignment4U2061093.c: 185:             updateScreen = 1;
  4627  064A  01E3               	clrf	_updateScreen
  4628  064B  0AE3               	incf	_updateScreen,f
  4629  064C                     i1l1931:
  4630                           
  4631                           ;Assignment4U2061093.c: 189:         PIR1bits.TMR1IF = 0;
  4632  064C  100C               	bcf	12,0	;volatile
  4633  064D                     i1l1933:
  4634                           
  4635                           ;Assignment4U2061093.c: 191:     if(INTCONbits.RBIF)
  4636  064D  1C0B               	btfss	11,0	;volatile
  4637  064E  2E50               	goto	u146_21
  4638  064F  2E51               	goto	u146_20
  4639  0650                     u146_21:
  4640  0650  2E70               	goto	i1l129
  4641  0651                     u146_20:
  4642  0651                     i1l1935:
  4643                           
  4644                           ;Assignment4U2061093.c: 192:     {;Assignment4U2061093.c: 193:         if(PORTBbits.RB0)
      +                          {
  4645  0651  1C06               	btfss	6,0	;volatile
  4646  0652  2E54               	goto	u147_21
  4647  0653  2E55               	goto	u147_20
  4648  0654                     u147_21:
  4649  0654  2E62               	goto	i1l125
  4650  0655                     u147_20:
  4651  0655                     i1l1937:
  4652                           
  4653                           ;Assignment4U2061093.c: 194:             convert++;
  4654  0655  3001               	movlw	1
  4655  0656  00F0               	movwf	??_myISR
  4656  0657  0870               	movf	??_myISR,w
  4657  0658  07FA               	addwf	_convert,f
  4658  0659                     i1l1939:
  4659                           
  4660                           ;Assignment4U2061093.c: 195:             if (convert>1){
  4661  0659  3002               	movlw	2
  4662  065A  027A               	subwf	_convert,w
  4663  065B  1C03               	skipc
  4664  065C  2E5E               	goto	u148_21
  4665  065D  2E5F               	goto	u148_20
  4666  065E                     u148_21:
  4667  065E  2E60               	goto	i1l1943
  4668  065F                     u148_20:
  4669  065F                     i1l1941:
  4670                           
  4671                           ;Assignment4U2061093.c: 196:                 convert = 0;
  4672  065F  01FA               	clrf	_convert
  4673  0660                     i1l1943:
  4674                           
  4675                           ;Assignment4U2061093.c: 198:             PORTBbits.RB0 = 0;
  4676  0660  1006               	bcf	6,0	;volatile
  4677                           
  4678                           ;Assignment4U2061093.c: 199:         }
  4679  0661  2E6F               	goto	i1l1949
  4680  0662                     i1l125:	
  4681                           ;Assignment4U2061093.c: 200:         else if(PORTBbits.RB1){
  4682                           
  4683  0662  1C86               	btfss	6,1	;volatile
  4684  0663  2E65               	goto	u149_21
  4685  0664  2E66               	goto	u149_20
  4686  0665                     u149_21:
  4687  0665  2E6F               	goto	i1l1949
  4688  0666                     u149_20:
  4689  0666                     i1l1945:
  4690                           
  4691                           ;Assignment4U2061093.c: 201:            high = temp;
  4692  0666  0879               	movf	_temp+1,w
  4693  0667  00DB               	movwf	_high+1
  4694  0668  0878               	movf	_temp,w
  4695  0669  00DA               	movwf	_high
  4696                           
  4697                           ;Assignment4U2061093.c: 202:            low = temp;
  4698  066A  0879               	movf	_temp+1,w
  4699  066B  00E1               	movwf	_low+1
  4700  066C  0878               	movf	_temp,w
  4701  066D  00E0               	movwf	_low
  4702  066E                     i1l1947:
  4703                           
  4704                           ;Assignment4U2061093.c: 204:             PORTBbits.RB1 = 0;
  4705  066E  1086               	bcf	6,1	;volatile
  4706  066F                     i1l1949:
  4707                           
  4708                           ;Assignment4U2061093.c: 207:         INTCONbits.RBIF = 0;
  4709  066F  100B               	bcf	11,0	;volatile
  4710  0670                     i1l129:
  4711  0670  0872               	movf	??_myISR+2,w
  4712  0671  008A               	movwf	10
  4713  0672  0E71               	swapf	??_myISR+1,w
  4714  0673  0083               	movwf	3
  4715  0674  0EFE               	swapf	btemp,f
  4716  0675  0E7E               	swapf	btemp,w
  4717  0676  0009               	retfie
  4718  0677                     __end_of_myISR:
  4719  007E                     btemp	set	126	;btemp
  4720  007E                     wtemp0	set	126
  4721                           
  4722                           	psect	intentry
  4723  0004                     __pintentry:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _myISR: [wreg+status,2+status,0]
  4726                           
  4727  0004                     interrupt_function:
  4728  007E                     saved_w	set	btemp
  4729  0004  00FE               	movwf	btemp
  4730  0005  0E03               	swapf	3,w
  4731  0006  00F1               	movwf	??_myISR+1
  4732  0007  080A               	movf	10,w
  4733  0008  00F2               	movwf	??_myISR+2
  4734  0009  2E33               	ljmp	_myISR
  4735                           
  4736                           	psect	idloc
  4737                           
  4738                           ;Config register IDLOC0 @ 0x2000
  4739                           ;	unspecified, using default values
  4740  2000                     	org	8192
  4741  2000  3FFF               	dw	16383
  4742                           
  4743                           ;Config register IDLOC1 @ 0x2001
  4744                           ;	unspecified, using default values
  4745  2001                     	org	8193
  4746  2001  3FFF               	dw	16383
  4747                           
  4748                           ;Config register IDLOC2 @ 0x2002
  4749                           ;	unspecified, using default values
  4750  2002                     	org	8194
  4751  2002  3FFF               	dw	16383
  4752                           
  4753                           ;Config register IDLOC3 @ 0x2003
  4754                           ;	unspecified, using default values
  4755  2003                     	org	8195
  4756  2003  3FFF               	dw	16383
  4757                           
  4758                           	psect	config
  4759                           
  4760                           ;Config register CONFIG1 @ 0x2007
  4761                           ;	Oscillator Selection bits
  4762                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4763                           ;	Watchdog Timer Enable bit
  4764                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4765                           ;	Power-up Timer Enable bit
  4766                           ;	PWRTE = OFF, PWRT disabled
  4767                           ;	RE3/MCLR pin function select bit
  4768                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4769                           ;	Code Protection bit
  4770                           ;	CP = OFF, Program memory code protection is disabled
  4771                           ;	Data Code Protection bit
  4772                           ;	CPD = OFF, Data memory code protection is disabled
  4773                           ;	Brown Out Reset Selection bits
  4774                           ;	BOREN = OFF, BOR disabled
  4775                           ;	Internal External Switchover bit
  4776                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4777                           ;	Fail-Safe Clock Monitor Enabled bit
  4778                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4779                           ;	Low Voltage Programming Enable bit
  4780                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4781                           ;	In-Circuit Debugger Mode bit
  4782                           ;	DEBUG = 0x1, unprogrammed default
  4783  2007                     	org	8199
  4784  2007  20F4               	dw	8436
  4785                           
  4786                           ;Config register CONFIG2 @ 0x2008
  4787                           ;	Brown-out Reset Selection bit
  4788                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4789                           ;	Flash Program Memory Self Write Enable bits
  4790                           ;	WRT = OFF, Write protection off
  4791  2008                     	org	8200
  4792  2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    363
    Data        4
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     54      68
    BANK1            32      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK0[12]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK0[12]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK0[12]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK0[12]), 

    LCD_putsc@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[8]), STR_2(CODE[6]), STR_1(CODE[8]), 

    LCD_puts@s	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@output(COMMON[7]), LCD_display_value@buffer(BANK0[12]), 


Critical Paths under _main in COMMON

    _tempDisplay->_GetThermistorTemp
    _tempDisplay->_LCD_cursor
    _ledBarChartC->_GetThermistorTemp
    _ledBarChartC->___awdiv
    _HighLow->_GetThermistorTemp
    _displayHighLow->_LCD_cursor
    _LCD_putsc->_LCD_putch
    _LCD_display_value->_ltoa
    _ltoa->_ultoa
    _ultoa->___llmod
    _LCD_puts->_LCD_putch
    _LCD_putch->_LCD_write
    _LCD_cursor->_LCD_write
    _convertToF->___awdiv
    ___awdiv->___wmul
    _GetThermistorTemp->_ADC_read
    _LCD_initialise->_LCD_clear
    _LCD_clear->_LCD_write

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _tempDisplay->_HighLow
    _ledBarChartC->___awdiv
    _HighLow->_displayHighLow
    _displayHighLow->_LCD_display_value
    _LCD_display_value->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _LCD_putch->_LCD_write
    _LCD_cursor->_LCD_write
    _convertToF->___awdiv
    ___awdiv->___wmul
    _LCD_initialise->_LCD_write
    _LCD_clear->_LCD_write

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29274
                     _ADC_initialise
                     _LCD_initialise
                             _config
                        _tempDisplay
 ---------------------------------------------------------------------------------
 (1) _tempDisplay                                          0     0      0   25748
                 _ADC_channel_select
                           _ADC_read
                  _GetThermistorTemp
                            _HighLow
                          _LCD_clear
                         _LCD_cursor
                  _LCD_display_value
                          _LCD_putsc
                         _convertToF
                       _ledBarChartC
 ---------------------------------------------------------------------------------
 (2) _ledBarChartC                                         3     3      0    1297
                                             10 BANK0      3     3      0
                           _ADC_read
                  _GetThermistorTemp
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _HighLow                                              3     3      0   11595
                                             51 BANK0      3     3      0
                           _ADC_read
                  _GetThermistorTemp
                         _convertToF
                     _displayHighLow
 ---------------------------------------------------------------------------------
 (3) _displayHighLow                                       4     0      4    9647
                                             47 BANK0      4     0      4
                         _LCD_cursor
                  _LCD_display_value
                          _LCD_putsc
                         _convertToF (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_putsc                                            5     3      2    2452
                                              7 BANK0      5     3      2
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (2) _LCD_display_value                                   16    12      4    4699
                                             31 BANK0     16    12      4
                           _LCD_puts
                               _ltoa
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                 9     3      6    2331
                                              6 COMMON     2     2      0
                                             25 BANK0      6     0      6
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     7      6    1666
                                              5 COMMON     1     1      0
                                             13 BANK0     12     6      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     412
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _LCD_puts                                             5     5      0    1894
                                              7 BANK0      5     5      0
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (3) _LCD_putch                                            3     3      0    1624
                                              5 COMMON     3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor                                           3     2      1    2074
                                              5 COMMON     3     2      1
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _convertToF                                           4     2      2    1255
                                             10 BANK0      4     2      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetThermistorTemp                                    6     4      2     670
                                              7 COMMON     1     1      0
                                              0 BANK0      5     3      2
                           _ADC_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_read                                             4     2      2      23
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_channel_select                                   2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_initialise                                       2     2      0    3526
                                              7 BANK0      2     2      0
                          _LCD_clear
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0    1661
                                              5 COMMON     2     2      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                           10     9      1    1525
                                              3 COMMON     2     1      1
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _ADC_initialise                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _myISR                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_initialise
   _LCD_initialise
     _LCD_clear
       _LCD_write
     _LCD_write
   _config
   _tempDisplay
     _ADC_channel_select
     _ADC_read
     _GetThermistorTemp
       _ADC_read (ARG)
     _HighLow
       _ADC_read
       _GetThermistorTemp
       _convertToF
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _displayHighLow
         _LCD_cursor
           _LCD_write
         _LCD_display_value
           _LCD_puts
             _LCD_putch
               _LCD_write
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _LCD_putsc
           _LCD_putch
         _convertToF (ARG)
     _LCD_clear
     _LCD_cursor
     _LCD_display_value
     _LCD_putsc
     _convertToF
     _ledBarChartC
       _ADC_read
       _GetThermistorTemp
       ___awdiv

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
BITBANK1            20      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      44       4       85.0%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4F       8        0.0%
ABS                  0      0      4F       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Apr 30 19:10:13 2022

                         pc 0002                          l91 07DD                          l97 050B  
              ___awdiv@sign 0027                          fsr 0004         ___wmul@multiplicand 0075  
                       l100 006F                         l103 03DD                         l114 06A6  
                       l211 004A                         l107 0431                         l204 0086  
                       l220 0789                         l117 0705                         l151 008D  
                       l154 009B                         l234 00AF                         l243 00C2  
                       l148 07F5                         l157 00CF                         l229 0731  
                       l191 0364                         l407 05DC                         l186 04A1  
                       l195 0394                         l371 079A                         l284 06D6  
                       l524 0574                         l373 07B4                         l199 03B2  
                       l831 0316                         l593 0632                         l833 032B  
                       l825 075D                         _GIE 005F                 ?_LCD_cursor 0075  
                       _bar 005C                         _low 0060                         fsr0 0004  
                       indf 0000                        l2101 0397                        l1311 07DE  
                      l2103 03A6                        l2111 0587                        l1313 07EA  
                      l2105 03AA                        l1241 07C9                        l1233 07B5  
                      l2201 077E                        l2121 05B6                        l2113 058A  
                      l1315 07EE                        l2107 03B1                        l2051 0330  
                      l1251 07D5                        l1243 07CA                        l1235 07B6  
                      l2203 0783                        l2123 05C4                        l2115 0597  
                      l2211 0740                        l1317 07F2                        l2061 0349  
                      l2053 0334                        l2301 0036                        l1253 07D6  
                      l1245 07CE                        l1237 07C0                        l2221 00A2  
                      l2125 05C5                        l2117 059B                        l2109 0575  
                      l2141 05FB                        l2133 05DD                        l2213 0744  
                      l2205 0733                        l2063 034E                        l2055 033D  
                      l2303 0039                        l1255 07D7                        l1247 07D1  
                      l1239 07C4                        l2223 00A7                        l2127 05CE  
                      l2119 05A4                        l2143 060D                        l2135 05E7  
                      l2215 074F                        l2207 0733                        l2231 070E  
                      l2311 03B3                        l2081 0367                        l2073 0355  
                      l2065 0352                        l2057 0340                        l2049 032F  
                      l1257 07D8                        l1249 07D4                        l2225 00AB  
                      l2161 0077                        l2153 0071                        l2129 05D4  
                      l2145 061B                        l2137 05EA                        l2209 0739  
                      l2241 072B                        l2233 0719                        l2321 0426  
                      l2313 03CF                        l2401 04B2                        l2083 0376  
                      l2075 0365                        l2067 0353                        l2059 0345  
                      l2251 07A1                        l2219 009D                        l2155 0075  
                      l2147 0624                        l2139 05F7                        l2171 02D2  
                      l2163 02A2                        l2243 00B0                        l2235 071E  
                      l2227 0706                        l2315 03F9                        l2331 069C  
                      l2323 0677                        l2411 04E1                        l2403 04BE  
                      l2093 0385                        l2085 0382                        l2309 003B  
                      l2341 0435                        l2261 06A9                        l1701 0513  
                      l2253 07A8                        l2245 078A                        l2149 062A  
                      l2181 0312                        l2173 02D6                        l2165 02AA  
                      l2237 0720                        l2229 070C                        l2317 0407  
                      l2333 06A2                        l2325 0684                        l2421 0502  
                      l2413 04E4                        l2405 04C3                        l2095 0395  
                      l2087 0383                        l2351 044B                        l2271 06D5  
                      l2263 06C2                        l1711 0527                        l1703 0518  
                      l2255 07AE                        l2247 078E                        l2191 0765  
                      l2183 031A                        l2175 02D8                        l2167 02C6  
                      l2239 0726                        l2319 040C                        l2335 06A4  
                      l2327 0696                        l2423 0509                        l2407 04CA  
                      l2415 04EC                        l2361 0461                        l1721 053D  
                      l1713 0529                        l1705 051A                        l2249 0792  
                      l2193 0767                        l2185 0321                        l2177 02F0  
                      l2169 02CA                        l2281 06D7                        l2337 06A5  
                      l2329 0698                        l2425 050A                        l2417 04F3  
                      l2409 04D7                        l2291 0022                        l2371 0477  
                      l2347 0439                        l2339 0432                        l2267 06CB  
                      l2259 06A7                        l1731 0560                        l1723 0541  
                      l1715 052F                        l1707 051E                        l2275 004B  
                      l2195 0771                        l2187 0323                        l2179 030C  
                      l2283 06DB                        l2419 04FF                        l2427 07F6  
                      l2293 0025                        l2381 048D                        l2357 044F  
                      l2349 0448                        l1741 0087                        l2269 06CF  
                      l1725 0552                        l1717 0532                        l1733 0566  
                      l1709 0523                        l2277 006B                        l2197 0776  
                      l2189 0761                        l2285 06E2                        l2429 07F9  
                      l2367 0465                        l2359 045E                        l1743 0091  
                      l1735 056B                        l1727 0558                        l1719 0539  
                      l2199 0778                        l2287 06EE                        l2391 04A2  
                      l2377 047B                        l2369 0474                        l1737 0570  
                      l1729 0559                        l2289 06F2                        l2393 04A9  
                      l2299 0027                        l2387 0491                        l2379 048A  
                      l2395 04AA                        l2389 04A0                        l2397 04AD  
                      l2399 04B0                        l1697 050C                        l1699 050F  
                      l1799 00C4                        STR_1 027D                        STR_2 028B  
                      STR_3 027D                        STR_4 0285                        STR_5 0291  
                      STR_6 0296                        STR_7 029B                        u2000 06D5  
                      u1200 052F                        u2001 06D4                        u1201 052E  
                      u2010 0036                        u2011 0035                        u2020 004A  
                      u2100 048A                        u1220 0541                        u2021 0049  
                      u2101 0489                        u1221 0540                        u2110 04A0  
                      u2030 03CF                        u2111 049F                        u1215 0533  
                      u2031 03CE                        u1240 0552                        u2040 03F9  
                      u2120 04A9                        u1241 0551                        u2041 03F8  
                      u2121 04A8                        u2050 040C                        u2130 04C3  
                      u1235 0542                        u2051 040B                        u2035 03CB  
                      u2131 04C2                        u1260 0566                        u1180 0513  
                      u2060 06A2                        u1261 0565                        u1245 054E  
                      u1181 0512                        u2045 03F5                        u2061 06A1  
                      u2070 0448                        u1270 056B                        u1190 051E  
                      u2071 0447                        u1271 056A                        u1255 055A  
                      u1191 051D                        u2080 045E                        u1280 0091  
                      u2081 045D                        u1281 0090                        u2090 0474  
                      u2091 0473                        u1700 0587                        u1701 0586  
                      u1630 0345                        u1631 0344                        u1640 0364  
                      u1720 059B                        u1800 060D                        u1641 0363  
                      u1721 059A                        u1801 060C                        u1650 0376  
                      u1651 0375                        u1715 058C                        u1740 05B6  
                      u1820 062A                        u1900 0739                        u1741 05B5  
                      u1821 0629                        u1805 0609                        u1901 0738  
                      u1670 0394                        u1910 00A2                        u1830 0086  
                      u1671 0393                        u1911 00A1                        u1831 0085  
                      u1735 059D                        u1815 061C                        u1680 03A6  
                      u1760 05D4                        u1840 02D2                        u1920 071E  
                      u1681 03A5                        u1665 0379                        u1761 05D3  
                      u1745 05B2                        u1841 02D1                        u1921 071D  
                      u1690 03B1                        u1770 05E7                        u1850 0312  
                      u1930 072B                        u1691 03B0                        u1755 05C6  
                      u1771 05E6                        u1851 0311                        u1931 072A  
                      u1860 032B                        u1940 0731                        u1861 032A  
                      u1941 0730                        u1950 0792                        u1870 0776  
                      u1790 05FB                        u1951 0791                        u1871 0775  
                      u1791 05FA                        u1880 0783                        u1881 0782  
                      u1785 05EC                        u1890 0789                        u1891 0788  
                      u1980 07AE                        u1981 07AD                        u1965 079B  
                      u1990 06C2                        u1991 06C1                        u1975 07A2  
                      u1995 06BE                        _TMR1 000E                        _high 005A  
                      _main 07F6                        _lowF 0058                        _ltoa 0732  
                      _temp 0078                        btemp 007E            LCD_putch@counter 0076  
                      start 000A            __end_of_ADC_read 009C             ?_displayHighLow 004F  
           __end_of_HighLow 0432             __end_of_TempLUT 027D            __end_of_LCD_puts 078A  
                     ?_main 0070             __end_of___awdiv 0575                       ?_ltoa 0039  
                     _ANSEL 0188             __end_of___lldiv 05DD             ___awdiv@divisor 0022  
                     _T1CON 0010             __end_of___llmod 0633                       i1l125 0662  
                     i1l129 0670             ___awdiv@counter 0026       LCD_initialise@counter 0027  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
               convertToF@t 002A        __end_of_ledBarChartC 06A7                       _highF 0056  
                     _myISR 0633                       _count 005F                       _ultoa 029F  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 000B       __end_of_ThermValueLUT 0204                 LCD_cursor@x 0077  
               LCD_cursor@y 0075                __end_of_main 07FC                __end_of_ltoa 075E  
                    ??_main 0078                      ??_ltoa 0076              ADC_read@result 0075  
         __end_of_LCD_clear 004B                 LCD_write@rs 0073           __end_of_LCD_putch 0087  
         __end_of_LCD_putsc 0732           __end_of_LCD_write 03B3                      _ADCON0 001F  
                    _ADCON1 009F                      ?_myISR 0070            ___llmod@dividend 0024  
                    _ADRESH 001E                      _ADRESL 009E            ___awdiv@dividend 0024  
                    _ANSELH 0189                      ?_ultoa 002D                      i1l1921 0633  
                    i1l1931 064C                      i1l1923 0639                      i1l1941 065F  
                    i1l1925 063F                      i1l1933 064D                      i1l1943 0660  
                    i1l1935 0651                      i1l1927 0649                      i1l1945 0666  
                    i1l1937 0655                      i1l1929 064A                      i1l1947 066E  
                    i1l1939 0659                      i1l1949 066F                      u144_20 0639  
                    u144_21 0638                      u145_20 0649                      u145_21 0648  
                    u146_20 0651                      u146_21 0650                      u147_20 0655  
                    u147_21 0654                      u148_20 065F                      u148_21 065E  
                    u149_20 0666                      u149_21 0665                ?_tempDisplay 0070  
                 ??_HighLow 0053            ??_ADC_initialise 0073                      ___wmul 078A  
                 ??___awdiv 0077                   ??___lldiv 0073                   ??___llmod 0073  
                    _config 07B5                      _count2 005E            ___awdiv@quotient 0028  
                    _result 005D                      saved_w 007E                   ?_ADC_read 0073  
                    ultoa@c 0037                      ultoa@v 0033     __end_of__initialization 0020  
                 ?_LCD_puts 0070              __pcstackCOMMON 0070                __pidataBANK0 07FC  
             __end_of_myISR 0677              _LCD_initialise 0432               __end_of_ultoa 032C  
        LCD_write@TRISC_BAK 0022                   LCD_puts@c 002B                   LCD_puts@i 002A  
                 LCD_puts@s 0029                ??_LCD_cursor 0076                  ??_ADC_read 0075  
         displayHighLow@max 0051           displayHighLow@min 004F                     ??_myISR 0070  
                   ??_ultoa 0075                  __pbssBANK0 0056  __end_of_ADC_channel_select 00D0  
          ??_displayHighLow 0078                  ??_LCD_puts 0027                  __pmaintext 07F6  
        __end_of_LCD_cursor 00B0      __end_of_LCD_initialise 04A2                     ?___wmul 0073  
              _ledBarChartC 0677                  __pintentry 0004                     ?_config 0070  
          LCD_write@counter 0025                  __stringtab 0100                  _convertToF 004B  
                   _HighLow 03B3                     _TempLUT 0204             ?_LCD_initialise 0070  
                   ___awdiv 050C                     ___lldiv 0575                     ___llmod 05DD  
                   __ptext1 04A2                     __ptext2 0677                     __ptext3 03B3  
                   __ptext4 06D7                     __ptext5 0706                     __ptext6 00B0  
                   __ptext7 0732                     __ptext8 029F                     __ptext9 05DD  
                   _convert 007A                   _T1CONbits 0010                   _LCD_clear 0022  
      end_of_initialization 0020                   _LCD_putch 0070                   _LCD_putsc 0706  
                 _LCD_write 032C                     ltoa@buf 0077                     ltoa@val 0039  
           ___lldiv@divisor 0020             ___lldiv@counter 002C                __pstringtext 0100  
                 _PORTBbits 0006                   _PORTCbits 0007           _GetThermistorTemp 06A7  
        ?_GetThermistorTemp 0020                  ?_LCD_clear 0070                  ?_LCD_putch 0070  
                ?_LCD_putsc 0027                  ?_LCD_write 0073                 ?_convertToF 002A  
       ??_GetThermistorTemp 0022              __end_of___wmul 07B5              __end_of_config 07DE  
 __end_of_GetThermistorTemp 06D7         start_initialization 000B         convertToF@converted 002C  
                LCD_putch@c 0075                  LCD_putsc@c 002B                  LCD_putsc@i 002A  
                LCD_putsc@s 0027                  LCD_write@c 0023             ___llmod@divisor 0020  
           ___llmod@counter 0074          _ADC_channel_select 00C3                    ??___wmul 0077  
             _ThermValueLUT 0112                    ??_config 0073                 __pdataBANK0 0060  
       ?_ADC_channel_select 0070                 __pbssCOMMON 0078                   ___latbits 0000  
             __pcstackBANK0 0020   ADC_channel_select@channel 0074          GetThermistorTemp@i 0077  
          LCD_clear@counter 0075                 ??_LCD_clear 0075                 ??_LCD_putch 0075  
               ??_LCD_putsc 0029                 ??_LCD_write 0074                    ?_HighLow 0070  
      ??_ADC_channel_select 0073            ??_LCD_initialise 0077             LCD_write@RSmask 0024  
             LCD_write@temp 0020                    ?___awdiv 0022                    ?___lldiv 0020  
                  ?___llmod 0020             LCD_write@intsON 0021                    _ADC_read 0087  
             ??_tempDisplay 0078           interrupt_function 0004              ___wmul@product 0020  
                  _IOCBbits 0096                    _LCD_puts 075E                    _PIE1bits 008C  
                  _PIR1bits 000C                  _ADCON0bits 001F                 __stringbase 0112  
         ___wmul@multiplier 0073                ??_convertToF 0078         __end_of_tempDisplay 050C  
   LCD_display_value@buffer 0043               _temparraysize 0062          __end_of__stringtab 0112  
            _ADC_initialise 07DE          __end_of_convertToF 0070                    __ptext10 0575  
                  __ptext11 075E                    __ptext20 07B5                    __ptext12 0070  
                  __ptext21 0432                    __ptext13 009C                    __ptext22 0022  
                  __ptext14 004B                    __ptext23 032C                    __ptext15 078A  
                  __ptext24 07DE                    __ptext16 050C                    __ptext25 0633  
                  __ptext17 06A7                    __ptext18 0087                    __ptext19 00C3  
         _LCD_display_value 00B0               ?_ledBarChartC 0070          ?_LCD_display_value 003F  
    __end_of_ADC_initialise 07F6                  _LCD_cursor 009C         ??_LCD_display_value 0078  
                _INTCONbits 000B                   ultoa@base 0031      LCD_display_value@value 003F  
                  intlevel1 0000                    ltoa@base 003D                 _tempDisplay 04A2  
          ___lldiv@dividend 0024   __end_of_LCD_display_value 00C3                   stringcode 010A  
            ??_ledBarChartC 002A              _displayHighLow 06D7             ?_ADC_initialise 0070  
                  ultoa@buf 0038                    ultoa@val 002D            ___lldiv@quotient 0028  
 GetThermistorTemp@ADCValue 0020                    stringtab 0100      __end_of_displayHighLow 0706  
              _updateScreen 0063  
